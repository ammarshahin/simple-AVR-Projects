
pass.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000d3a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000006e  00800060  00000d3a  00000dce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  008000ce  008000ce  00000e3c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e3c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000128  00000000  00000000  00000e6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001149  00000000  00000000  00000f94  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000727  00000000  00000000  000020dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008a9  00000000  00000000  00002804  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000260  00000000  00000000  000030b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004c0  00000000  00000000  00003310  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009b3  00000000  00000000  000037d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c8  00000000  00000000  00004183  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__ctors_end>
   4:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
   8:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
   c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  10:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  14:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  18:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  1c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  20:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  24:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  28:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  2c:	0c 94 b8 02 	jmp	0x570	; 0x570 <__vector_11>
  30:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  34:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  38:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  3c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  40:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  44:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  48:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  4c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  50:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  54:	07 63       	ori	r16, 0x37	; 55
  56:	42 36       	cpi	r20, 0x62	; 98
  58:	b7 9b       	sbis	0x16, 7	; 22
  5a:	d8 a7       	std	Y+40, r29	; 0x28
  5c:	1a 39       	cpi	r17, 0x9A	; 154
  5e:	68 56       	subi	r22, 0x68	; 104
  60:	18 ae       	std	Y+56, r1	; 0x38
  62:	ba ab       	std	Y+50, r27	; 0x32
  64:	55 8c       	ldd	r5, Z+29	; 0x1d
  66:	1d 3c       	cpi	r17, 0xCD	; 205
  68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
  6a:	57 63       	ori	r21, 0x37	; 55
  6c:	bd 6d       	ori	r27, 0xDD	; 221
  6e:	ed fd       	.word	0xfded	; ????
  70:	75 3e       	cpi	r23, 0xE5	; 229
  72:	f6 17       	cp	r31, r22
  74:	72 31       	cpi	r23, 0x12	; 18
  76:	bf 00       	.word	0x00bf	; ????
  78:	00 00       	nop
  7a:	80 3f       	cpi	r24, 0xF0	; 240
  7c:	08 00       	.word	0x0008	; ????
  7e:	00 00       	nop
  80:	be 92       	st	-X, r11
  82:	24 49       	sbci	r18, 0x94	; 148
  84:	12 3e       	cpi	r17, 0xE2	; 226
  86:	ab aa       	std	Y+51, r10	; 0x33
  88:	aa 2a       	or	r10, r26
  8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
  8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
  8e:	4c 3e       	cpi	r20, 0xEC	; 236
  90:	00 00       	nop
  92:	00 80       	ld	r0, Z
  94:	be ab       	std	Y+54, r27	; 0x36
  96:	aa aa       	std	Y+50, r10	; 0x32
  98:	aa 3e       	cpi	r26, 0xEA	; 234
  9a:	00 00       	nop
  9c:	00 00       	nop
  9e:	bf 00       	.word	0x00bf	; ????
  a0:	00 00       	nop
  a2:	80 3f       	cpi	r24, 0xF0	; 240
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	00 08       	sbc	r0, r0
  aa:	41 78       	andi	r20, 0x81	; 129
  ac:	d3 bb       	out	0x13, r29	; 19
  ae:	43 87       	std	Z+11, r20	; 0x0b
  b0:	d1 13       	cpse	r29, r17
  b2:	3d 19       	sub	r19, r13
  b4:	0e 3c       	cpi	r16, 0xCE	; 206
  b6:	c3 bd       	out	0x23, r28	; 35
  b8:	42 82       	std	Z+2, r4	; 0x02
  ba:	ad 2b       	or	r26, r29
  bc:	3e 68       	ori	r19, 0x8E	; 142
  be:	ec 82       	std	Y+4, r14	; 0x04
  c0:	76 be       	out	0x36, r7	; 54
  c2:	d9 8f       	std	Y+25, r29	; 0x19
  c4:	e1 a9       	ldd	r30, Z+49	; 0x31
  c6:	3e 4c       	sbci	r19, 0xCE	; 206
  c8:	80 ef       	ldi	r24, 0xF0	; 240
  ca:	ff be       	out	0x3f, r15	; 63
  cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <__fp_szero+0x6>
  ce:	ff 7f       	andi	r31, 0xFF	; 255
  d0:	3f 00       	.word	0x003f	; ????
  d2:	00 00       	nop
	...

000000d6 <__ctors_end>:
  d6:	11 24       	eor	r1, r1
  d8:	1f be       	out	0x3f, r1	; 63
  da:	cf e5       	ldi	r28, 0x5F	; 95
  dc:	d8 e0       	ldi	r29, 0x08	; 8
  de:	de bf       	out	0x3e, r29	; 62
  e0:	cd bf       	out	0x3d, r28	; 61

000000e2 <__do_copy_data>:
  e2:	10 e0       	ldi	r17, 0x00	; 0
  e4:	a0 e6       	ldi	r26, 0x60	; 96
  e6:	b0 e0       	ldi	r27, 0x00	; 0
  e8:	ea e3       	ldi	r30, 0x3A	; 58
  ea:	fd e0       	ldi	r31, 0x0D	; 13
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <__do_copy_data+0x10>
  ee:	05 90       	lpm	r0, Z+
  f0:	0d 92       	st	X+, r0
  f2:	ae 3c       	cpi	r26, 0xCE	; 206
  f4:	b1 07       	cpc	r27, r17
  f6:	d9 f7       	brne	.-10     	; 0xee <__do_copy_data+0xc>

000000f8 <__do_clear_bss>:
  f8:	20 e0       	ldi	r18, 0x00	; 0
  fa:	ae ec       	ldi	r26, 0xCE	; 206
  fc:	b0 e0       	ldi	r27, 0x00	; 0
  fe:	01 c0       	rjmp	.+2      	; 0x102 <.do_clear_bss_start>

00000100 <.do_clear_bss_loop>:
 100:	1d 92       	st	X+, r1

00000102 <.do_clear_bss_start>:
 102:	a1 3d       	cpi	r26, 0xD1	; 209
 104:	b2 07       	cpc	r27, r18
 106:	e1 f7       	brne	.-8      	; 0x100 <.do_clear_bss_loop>
 108:	0e 94 31 02 	call	0x462	; 0x462 <main>
 10c:	0c 94 9b 06 	jmp	0xd36	; 0xd36 <_exit>

00000110 <__bad_interrupt>:
 110:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000114 <keypad_init>:
 114:	80 ef       	ldi	r24, 0xF0	; 240
 116:	84 bb       	out	0x14, r24	; 20
 118:	8f ef       	ldi	r24, 0xFF	; 255
 11a:	85 bb       	out	0x15, r24	; 21
 11c:	08 95       	ret

0000011e <KeyPad_getpressedkey>:
 11e:	84 e0       	ldi	r24, 0x04	; 4
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	60 e0       	ldi	r22, 0x00	; 0
 124:	41 e0       	ldi	r20, 0x01	; 1
 126:	50 e0       	ldi	r21, 0x00	; 0
 128:	75 b3       	in	r23, 0x15	; 21
 12a:	9a 01       	movw	r18, r20
 12c:	08 2e       	mov	r0, r24
 12e:	02 c0       	rjmp	.+4      	; 0x134 <KeyPad_getpressedkey+0x16>
 130:	22 0f       	add	r18, r18
 132:	33 1f       	adc	r19, r19
 134:	0a 94       	dec	r0
 136:	e2 f7       	brpl	.-8      	; 0x130 <KeyPad_getpressedkey+0x12>
 138:	e2 2f       	mov	r30, r18
 13a:	e0 95       	com	r30
 13c:	7e 23       	and	r23, r30
 13e:	75 bb       	out	0x15, r23	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 140:	e9 ef       	ldi	r30, 0xF9	; 249
 142:	f0 e0       	ldi	r31, 0x00	; 0
 144:	31 97       	sbiw	r30, 0x01	; 1
 146:	f1 f7       	brne	.-4      	; 0x144 <KeyPad_getpressedkey+0x26>
 148:	00 c0       	rjmp	.+0      	; 0x14a <KeyPad_getpressedkey+0x2c>
 14a:	00 00       	nop
 14c:	73 b3       	in	r23, 0x13	; 19
 14e:	7f 70       	andi	r23, 0x0F	; 15
 150:	7f 30       	cpi	r23, 0x0F	; 15
 152:	29 f0       	breq	.+10     	; 0x15e <KeyPad_getpressedkey+0x40>
 154:	83 b3       	in	r24, 0x13	; 19
 156:	8f 70       	andi	r24, 0x0F	; 15
 158:	8f 30       	cpi	r24, 0x0F	; 15
 15a:	e1 f7       	brne	.-8      	; 0x154 <KeyPad_getpressedkey+0x36>
 15c:	08 c0       	rjmp	.+16     	; 0x16e <KeyPad_getpressedkey+0x50>
 15e:	35 b3       	in	r19, 0x15	; 21
 160:	23 2b       	or	r18, r19
 162:	25 bb       	out	0x15, r18	; 21
 164:	6f 5f       	subi	r22, 0xFF	; 255
 166:	01 96       	adiw	r24, 0x01	; 1
 168:	64 30       	cpi	r22, 0x04	; 4
 16a:	f1 f6       	brne	.-68     	; 0x128 <KeyPad_getpressedkey+0xa>
 16c:	57 c0       	rjmp	.+174    	; 0x21c <KeyPad_getpressedkey+0xfe>
 16e:	64 30       	cpi	r22, 0x04	; 4
 170:	09 f4       	brne	.+2      	; 0x174 <KeyPad_getpressedkey+0x56>
 172:	57 c0       	rjmp	.+174    	; 0x222 <KeyPad_getpressedkey+0x104>
 174:	61 30       	cpi	r22, 0x01	; 1
 176:	c1 f0       	breq	.+48     	; 0x1a8 <KeyPad_getpressedkey+0x8a>
 178:	28 f0       	brcs	.+10     	; 0x184 <KeyPad_getpressedkey+0x66>
 17a:	62 30       	cpi	r22, 0x02	; 2
 17c:	39 f1       	breq	.+78     	; 0x1cc <KeyPad_getpressedkey+0xae>
 17e:	63 30       	cpi	r22, 0x03	; 3
 180:	b9 f1       	breq	.+110    	; 0x1f0 <KeyPad_getpressedkey+0xd2>
 182:	41 c0       	rjmp	.+130    	; 0x206 <KeyPad_getpressedkey+0xe8>
 184:	7b 30       	cpi	r23, 0x0B	; 11
 186:	61 f0       	breq	.+24     	; 0x1a0 <KeyPad_getpressedkey+0x82>
 188:	18 f4       	brcc	.+6      	; 0x190 <KeyPad_getpressedkey+0x72>
 18a:	77 30       	cpi	r23, 0x07	; 7
 18c:	59 f0       	breq	.+22     	; 0x1a4 <KeyPad_getpressedkey+0x86>
 18e:	04 c0       	rjmp	.+8      	; 0x198 <KeyPad_getpressedkey+0x7a>
 190:	7d 30       	cpi	r23, 0x0D	; 13
 192:	21 f0       	breq	.+8      	; 0x19c <KeyPad_getpressedkey+0x7e>
 194:	7e 30       	cpi	r23, 0x0E	; 14
 196:	c9 f1       	breq	.+114    	; 0x20a <KeyPad_getpressedkey+0xec>
 198:	84 e6       	ldi	r24, 0x64	; 100
 19a:	3e c0       	rjmp	.+124    	; 0x218 <KeyPad_getpressedkey+0xfa>
 19c:	84 e0       	ldi	r24, 0x04	; 4
 19e:	3c c0       	rjmp	.+120    	; 0x218 <KeyPad_getpressedkey+0xfa>
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	3a c0       	rjmp	.+116    	; 0x218 <KeyPad_getpressedkey+0xfa>
 1a4:	80 e0       	ldi	r24, 0x00	; 0
 1a6:	38 c0       	rjmp	.+112    	; 0x218 <KeyPad_getpressedkey+0xfa>
 1a8:	7b 30       	cpi	r23, 0x0B	; 11
 1aa:	61 f0       	breq	.+24     	; 0x1c4 <KeyPad_getpressedkey+0xa6>
 1ac:	18 f4       	brcc	.+6      	; 0x1b4 <KeyPad_getpressedkey+0x96>
 1ae:	77 30       	cpi	r23, 0x07	; 7
 1b0:	59 f0       	breq	.+22     	; 0x1c8 <KeyPad_getpressedkey+0xaa>
 1b2:	04 c0       	rjmp	.+8      	; 0x1bc <KeyPad_getpressedkey+0x9e>
 1b4:	7d 30       	cpi	r23, 0x0D	; 13
 1b6:	21 f0       	breq	.+8      	; 0x1c0 <KeyPad_getpressedkey+0xa2>
 1b8:	7e 30       	cpi	r23, 0x0E	; 14
 1ba:	49 f1       	breq	.+82     	; 0x20e <KeyPad_getpressedkey+0xf0>
 1bc:	84 e6       	ldi	r24, 0x64	; 100
 1be:	2c c0       	rjmp	.+88     	; 0x218 <KeyPad_getpressedkey+0xfa>
 1c0:	85 e0       	ldi	r24, 0x05	; 5
 1c2:	2a c0       	rjmp	.+84     	; 0x218 <KeyPad_getpressedkey+0xfa>
 1c4:	82 e0       	ldi	r24, 0x02	; 2
 1c6:	28 c0       	rjmp	.+80     	; 0x218 <KeyPad_getpressedkey+0xfa>
 1c8:	80 e0       	ldi	r24, 0x00	; 0
 1ca:	26 c0       	rjmp	.+76     	; 0x218 <KeyPad_getpressedkey+0xfa>
 1cc:	7b 30       	cpi	r23, 0x0B	; 11
 1ce:	61 f0       	breq	.+24     	; 0x1e8 <KeyPad_getpressedkey+0xca>
 1d0:	18 f4       	brcc	.+6      	; 0x1d8 <KeyPad_getpressedkey+0xba>
 1d2:	77 30       	cpi	r23, 0x07	; 7
 1d4:	59 f0       	breq	.+22     	; 0x1ec <KeyPad_getpressedkey+0xce>
 1d6:	04 c0       	rjmp	.+8      	; 0x1e0 <KeyPad_getpressedkey+0xc2>
 1d8:	7d 30       	cpi	r23, 0x0D	; 13
 1da:	21 f0       	breq	.+8      	; 0x1e4 <KeyPad_getpressedkey+0xc6>
 1dc:	7e 30       	cpi	r23, 0x0E	; 14
 1de:	c9 f0       	breq	.+50     	; 0x212 <KeyPad_getpressedkey+0xf4>
 1e0:	84 e6       	ldi	r24, 0x64	; 100
 1e2:	1a c0       	rjmp	.+52     	; 0x218 <KeyPad_getpressedkey+0xfa>
 1e4:	86 e0       	ldi	r24, 0x06	; 6
 1e6:	18 c0       	rjmp	.+48     	; 0x218 <KeyPad_getpressedkey+0xfa>
 1e8:	83 e0       	ldi	r24, 0x03	; 3
 1ea:	16 c0       	rjmp	.+44     	; 0x218 <KeyPad_getpressedkey+0xfa>
 1ec:	80 e0       	ldi	r24, 0x00	; 0
 1ee:	14 c0       	rjmp	.+40     	; 0x218 <KeyPad_getpressedkey+0xfa>
 1f0:	7b 30       	cpi	r23, 0x0B	; 11
 1f2:	89 f0       	breq	.+34     	; 0x216 <KeyPad_getpressedkey+0xf8>
 1f4:	18 f4       	brcc	.+6      	; 0x1fc <KeyPad_getpressedkey+0xde>
 1f6:	77 30       	cpi	r23, 0x07	; 7
 1f8:	71 f0       	breq	.+28     	; 0x216 <KeyPad_getpressedkey+0xf8>
 1fa:	03 c0       	rjmp	.+6      	; 0x202 <KeyPad_getpressedkey+0xe4>
 1fc:	7d 50       	subi	r23, 0x0D	; 13
 1fe:	72 30       	cpi	r23, 0x02	; 2
 200:	50 f0       	brcs	.+20     	; 0x216 <KeyPad_getpressedkey+0xf8>
 202:	84 e6       	ldi	r24, 0x64	; 100
 204:	09 c0       	rjmp	.+18     	; 0x218 <KeyPad_getpressedkey+0xfa>
 206:	84 e6       	ldi	r24, 0x64	; 100
 208:	07 c0       	rjmp	.+14     	; 0x218 <KeyPad_getpressedkey+0xfa>
 20a:	87 e0       	ldi	r24, 0x07	; 7
 20c:	05 c0       	rjmp	.+10     	; 0x218 <KeyPad_getpressedkey+0xfa>
 20e:	88 e0       	ldi	r24, 0x08	; 8
 210:	03 c0       	rjmp	.+6      	; 0x218 <KeyPad_getpressedkey+0xfa>
 212:	89 e0       	ldi	r24, 0x09	; 9
 214:	01 c0       	rjmp	.+2      	; 0x218 <KeyPad_getpressedkey+0xfa>
 216:	80 e0       	ldi	r24, 0x00	; 0
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	08 95       	ret
 21c:	84 e6       	ldi	r24, 0x64	; 100
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	08 95       	ret
 222:	84 e6       	ldi	r24, 0x64	; 100
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	08 95       	ret

00000228 <LCD_send_comand>:
 228:	c2 98       	cbi	0x18, 2	; 24
 22a:	c1 98       	cbi	0x18, 1	; 24
 22c:	e9 ef       	ldi	r30, 0xF9	; 249
 22e:	f0 e0       	ldi	r31, 0x00	; 0
 230:	31 97       	sbiw	r30, 0x01	; 1
 232:	f1 f7       	brne	.-4      	; 0x230 <LCD_send_comand+0x8>
 234:	00 c0       	rjmp	.+0      	; 0x236 <LCD_send_comand+0xe>
 236:	00 00       	nop
 238:	c0 9a       	sbi	0x18, 0	; 24
 23a:	e9 ef       	ldi	r30, 0xF9	; 249
 23c:	f0 e0       	ldi	r31, 0x00	; 0
 23e:	31 97       	sbiw	r30, 0x01	; 1
 240:	f1 f7       	brne	.-4      	; 0x23e <LCD_send_comand+0x16>
 242:	00 c0       	rjmp	.+0      	; 0x244 <LCD_send_comand+0x1c>
 244:	00 00       	nop
 246:	8b bb       	out	0x1b, r24	; 27
 248:	89 ef       	ldi	r24, 0xF9	; 249
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	01 97       	sbiw	r24, 0x01	; 1
 24e:	f1 f7       	brne	.-4      	; 0x24c <LCD_send_comand+0x24>
 250:	00 c0       	rjmp	.+0      	; 0x252 <LCD_send_comand+0x2a>
 252:	00 00       	nop
 254:	c0 98       	cbi	0x18, 0	; 24
 256:	e9 ef       	ldi	r30, 0xF9	; 249
 258:	f0 e0       	ldi	r31, 0x00	; 0
 25a:	31 97       	sbiw	r30, 0x01	; 1
 25c:	f1 f7       	brne	.-4      	; 0x25a <LCD_send_comand+0x32>
 25e:	00 c0       	rjmp	.+0      	; 0x260 <LCD_send_comand+0x38>
 260:	00 00       	nop
 262:	08 95       	ret

00000264 <LCD_init>:
 264:	8a b3       	in	r24, 0x1a	; 26
 266:	8f ef       	ldi	r24, 0xFF	; 255
 268:	8a bb       	out	0x1a, r24	; 26
 26a:	87 b3       	in	r24, 0x17	; 23
 26c:	87 60       	ori	r24, 0x07	; 7
 26e:	87 bb       	out	0x17, r24	; 23
 270:	88 e3       	ldi	r24, 0x38	; 56
 272:	0e 94 14 01 	call	0x228	; 0x228 <LCD_send_comand>
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	0e 94 14 01 	call	0x228	; 0x228 <LCD_send_comand>
 27c:	8c e0       	ldi	r24, 0x0C	; 12
 27e:	0e 94 14 01 	call	0x228	; 0x228 <LCD_send_comand>
 282:	08 95       	ret

00000284 <LCD_Display>:
 284:	cf 93       	push	r28
 286:	c8 2f       	mov	r28, r24
 288:	90 91 ce 00 	lds	r25, 0x00CE
 28c:	9f 5f       	subi	r25, 0xFF	; 255
 28e:	90 93 ce 00 	sts	0x00CE, r25
 292:	91 31       	cpi	r25, 0x11	; 17
 294:	19 f4       	brne	.+6      	; 0x29c <LCD_Display+0x18>
 296:	80 ec       	ldi	r24, 0xC0	; 192
 298:	0e 94 14 01 	call	0x228	; 0x228 <LCD_send_comand>
 29c:	80 91 ce 00 	lds	r24, 0x00CE
 2a0:	81 32       	cpi	r24, 0x21	; 33
 2a2:	29 f4       	brne	.+10     	; 0x2ae <LCD_Display+0x2a>
 2a4:	10 92 ce 00 	sts	0x00CE, r1
 2a8:	80 e8       	ldi	r24, 0x80	; 128
 2aa:	0e 94 14 01 	call	0x228	; 0x228 <LCD_send_comand>
 2ae:	c2 9a       	sbi	0x18, 2	; 24
 2b0:	c1 98       	cbi	0x18, 1	; 24
 2b2:	89 ef       	ldi	r24, 0xF9	; 249
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	01 97       	sbiw	r24, 0x01	; 1
 2b8:	f1 f7       	brne	.-4      	; 0x2b6 <LCD_Display+0x32>
 2ba:	00 c0       	rjmp	.+0      	; 0x2bc <LCD_Display+0x38>
 2bc:	00 00       	nop
 2be:	c0 9a       	sbi	0x18, 0	; 24
 2c0:	89 ef       	ldi	r24, 0xF9	; 249
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	01 97       	sbiw	r24, 0x01	; 1
 2c6:	f1 f7       	brne	.-4      	; 0x2c4 <LCD_Display+0x40>
 2c8:	00 c0       	rjmp	.+0      	; 0x2ca <LCD_Display+0x46>
 2ca:	00 00       	nop
 2cc:	cb bb       	out	0x1b, r28	; 27
 2ce:	89 ef       	ldi	r24, 0xF9	; 249
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	01 97       	sbiw	r24, 0x01	; 1
 2d4:	f1 f7       	brne	.-4      	; 0x2d2 <LCD_Display+0x4e>
 2d6:	00 c0       	rjmp	.+0      	; 0x2d8 <LCD_Display+0x54>
 2d8:	00 00       	nop
 2da:	c0 98       	cbi	0x18, 0	; 24
 2dc:	89 ef       	ldi	r24, 0xF9	; 249
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	01 97       	sbiw	r24, 0x01	; 1
 2e2:	f1 f7       	brne	.-4      	; 0x2e0 <LCD_Display+0x5c>
 2e4:	00 c0       	rjmp	.+0      	; 0x2e6 <LCD_Display+0x62>
 2e6:	00 00       	nop
 2e8:	cf 91       	pop	r28
 2ea:	08 95       	ret

000002ec <LCD_Goto_XY>:
 2ec:	cf 93       	push	r28
 2ee:	c6 2f       	mov	r28, r22
 2f0:	61 31       	cpi	r22, 0x11	; 17
 2f2:	90 f4       	brcc	.+36     	; 0x318 <LCD_Goto_XY+0x2c>
 2f4:	81 11       	cpse	r24, r1
 2f6:	07 c0       	rjmp	.+14     	; 0x306 <LCD_Goto_XY+0x1a>
 2f8:	80 e8       	ldi	r24, 0x80	; 128
 2fa:	86 0f       	add	r24, r22
 2fc:	0e 94 14 01 	call	0x228	; 0x228 <LCD_send_comand>
 300:	c0 93 ce 00 	sts	0x00CE, r28
 304:	09 c0       	rjmp	.+18     	; 0x318 <LCD_Goto_XY+0x2c>
 306:	81 30       	cpi	r24, 0x01	; 1
 308:	39 f4       	brne	.+14     	; 0x318 <LCD_Goto_XY+0x2c>
 30a:	80 ec       	ldi	r24, 0xC0	; 192
 30c:	86 0f       	add	r24, r22
 30e:	0e 94 14 01 	call	0x228	; 0x228 <LCD_send_comand>
 312:	c0 5f       	subi	r28, 0xF0	; 240
 314:	c0 93 ce 00 	sts	0x00CE, r28
 318:	cf 91       	pop	r28
 31a:	08 95       	ret

0000031c <LCD_Display_String>:
 31c:	1f 93       	push	r17
 31e:	cf 93       	push	r28
 320:	df 93       	push	r29
 322:	ec 01       	movw	r28, r24
 324:	88 81       	ld	r24, Y
 326:	88 23       	and	r24, r24
 328:	51 f0       	breq	.+20     	; 0x33e <LCD_Display_String+0x22>
 32a:	10 e0       	ldi	r17, 0x00	; 0
 32c:	0e 94 42 01 	call	0x284	; 0x284 <LCD_Display>
 330:	1f 5f       	subi	r17, 0xFF	; 255
 332:	fe 01       	movw	r30, r28
 334:	e1 0f       	add	r30, r17
 336:	f1 1d       	adc	r31, r1
 338:	80 81       	ld	r24, Z
 33a:	81 11       	cpse	r24, r1
 33c:	f7 cf       	rjmp	.-18     	; 0x32c <LCD_Display_String+0x10>
 33e:	df 91       	pop	r29
 340:	cf 91       	pop	r28
 342:	1f 91       	pop	r17
 344:	08 95       	ret

00000346 <LCD_Clear>:
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	0e 94 14 01 	call	0x228	; 0x228 <LCD_send_comand>
 34c:	10 92 ce 00 	sts	0x00CE, r1
 350:	08 95       	ret

00000352 <passwordCheck>:
		}
	}		
}

TU08 passwordCheck(TU08 key)
{
 352:	8f 92       	push	r8
 354:	9f 92       	push	r9
 356:	af 92       	push	r10
 358:	bf 92       	push	r11
 35a:	cf 92       	push	r12
 35c:	df 92       	push	r13
 35e:	ef 92       	push	r14
 360:	ff 92       	push	r15
 362:	cf 93       	push	r28
 364:	df 93       	push	r29
 366:	d8 2f       	mov	r29, r24
	static TS08 count = NO_OF_DIGITS;
	static TS16 pass = 1;
	
	if(key != 100)
 368:	84 36       	cpi	r24, 0x64	; 100
 36a:	09 f4       	brne	.+2      	; 0x36e <passwordCheck+0x1c>
 36c:	5d c0       	rjmp	.+186    	; 0x428 <passwordCheck+0xd6>
	{
		if( count >= 0 )
 36e:	c0 91 62 00 	lds	r28, 0x0062
 372:	cc 23       	and	r28, r28
 374:	c4 f1       	brlt	.+112    	; 0x3e6 <passwordCheck+0x94>
		{
			pass +=  key * pow(10,count);
 376:	6c 2f       	mov	r22, r28
 378:	77 27       	eor	r23, r23
 37a:	67 fd       	sbrc	r22, 7
 37c:	70 95       	com	r23
 37e:	87 2f       	mov	r24, r23
 380:	97 2f       	mov	r25, r23
 382:	0e 94 df 03 	call	0x7be	; 0x7be <__floatsisf>
 386:	9b 01       	movw	r18, r22
 388:	ac 01       	movw	r20, r24
 38a:	60 e0       	ldi	r22, 0x00	; 0
 38c:	70 e0       	ldi	r23, 0x00	; 0
 38e:	80 e2       	ldi	r24, 0x20	; 32
 390:	91 e4       	ldi	r25, 0x41	; 65
 392:	0e 94 ce 04 	call	0x99c	; 0x99c <pow>
 396:	6b 01       	movw	r12, r22
 398:	7c 01       	movw	r14, r24
 39a:	60 91 60 00 	lds	r22, 0x0060
 39e:	70 91 61 00 	lds	r23, 0x0061
 3a2:	88 27       	eor	r24, r24
 3a4:	77 fd       	sbrc	r23, 7
 3a6:	80 95       	com	r24
 3a8:	98 2f       	mov	r25, r24
 3aa:	0e 94 df 03 	call	0x7be	; 0x7be <__floatsisf>
 3ae:	4b 01       	movw	r8, r22
 3b0:	5c 01       	movw	r10, r24
 3b2:	6d 2f       	mov	r22, r29
 3b4:	70 e0       	ldi	r23, 0x00	; 0
 3b6:	80 e0       	ldi	r24, 0x00	; 0
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	0e 94 df 03 	call	0x7be	; 0x7be <__floatsisf>
 3be:	a7 01       	movw	r20, r14
 3c0:	96 01       	movw	r18, r12
 3c2:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__mulsf3>
 3c6:	9b 01       	movw	r18, r22
 3c8:	ac 01       	movw	r20, r24
 3ca:	c5 01       	movw	r24, r10
 3cc:	b4 01       	movw	r22, r8
 3ce:	0e 94 48 03 	call	0x690	; 0x690 <__addsf3>
 3d2:	0e 94 ac 03 	call	0x758	; 0x758 <__fixsfsi>
 3d6:	70 93 61 00 	sts	0x0061, r23
 3da:	60 93 60 00 	sts	0x0060, r22
			count--;
 3de:	c1 50       	subi	r28, 0x01	; 1
 3e0:	c0 93 62 00 	sts	0x0062, r28
 3e4:	21 c0       	rjmp	.+66     	; 0x428 <passwordCheck+0xd6>
		}
		else
		{
			LCD_Clear();
 3e6:	0e 94 a3 01 	call	0x346	; 0x346 <LCD_Clear>
			SSD_Display_BCD(0);
 3ea:	80 e0       	ldi	r24, 0x00	; 0
 3ec:	0e 94 20 03 	call	0x640	; 0x640 <SSD_Display_BCD>
			LCD_Display_String("Invalid password!!!");
 3f0:	83 e6       	ldi	r24, 0x63	; 99
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	0e 94 8e 01 	call	0x31c	; 0x31c <LCD_Display_String>
 3f8:	2f e5       	ldi	r18, 0x5F	; 95
 3fa:	8a ee       	ldi	r24, 0xEA	; 234
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	21 50       	subi	r18, 0x01	; 1
 400:	80 40       	sbci	r24, 0x00	; 0
 402:	90 40       	sbci	r25, 0x00	; 0
 404:	e1 f7       	brne	.-8      	; 0x3fe <passwordCheck+0xac>
 406:	00 c0       	rjmp	.+0      	; 0x408 <passwordCheck+0xb6>
 408:	00 00       	nop
			_delay_ms(300);
			count = NO_OF_DIGITS;
 40a:	83 e0       	ldi	r24, 0x03	; 3
 40c:	80 93 62 00 	sts	0x0062, r24
			pass = 1;
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	90 93 61 00 	sts	0x0061, r25
 418:	80 93 60 00 	sts	0x0060, r24
			LCD_Clear();
 41c:	0e 94 a3 01 	call	0x346	; 0x346 <LCD_Clear>
			LCD_Display_String("enter your password");
 420:	87 e7       	ldi	r24, 0x77	; 119
 422:	90 e0       	ldi	r25, 0x00	; 0
 424:	0e 94 8e 01 	call	0x31c	; 0x31c <LCD_Display_String>
		}
	}

	if (pass == PASSWORD)
 428:	80 91 60 00 	lds	r24, 0x0060
 42c:	90 91 61 00 	lds	r25, 0x0061
 430:	82 3d       	cpi	r24, 0xD2	; 210
 432:	94 40       	sbci	r25, 0x04	; 4
 434:	51 f4       	brne	.+20     	; 0x44a <passwordCheck+0xf8>
	{
		count = NO_OF_DIGITS;
 436:	83 e0       	ldi	r24, 0x03	; 3
 438:	80 93 62 00 	sts	0x0062, r24
		pass = 1;
 43c:	81 e0       	ldi	r24, 0x01	; 1
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	90 93 61 00 	sts	0x0061, r25
 444:	80 93 60 00 	sts	0x0060, r24
		return 1;
 448:	01 c0       	rjmp	.+2      	; 0x44c <passwordCheck+0xfa>
	}
	else
	{
		return 0;	
 44a:	80 e0       	ldi	r24, 0x00	; 0
	}
}
 44c:	df 91       	pop	r29
 44e:	cf 91       	pop	r28
 450:	ff 90       	pop	r15
 452:	ef 90       	pop	r14
 454:	df 90       	pop	r13
 456:	cf 90       	pop	r12
 458:	bf 90       	pop	r11
 45a:	af 90       	pop	r10
 45c:	9f 90       	pop	r9
 45e:	8f 90       	pop	r8
 460:	08 95       	ret

00000462 <main>:

int main(void)
{   
	TU08 i = 0,key = 0,k = 0;
	
	LCD_init();
 462:	0e 94 32 01 	call	0x264	; 0x264 <LCD_init>
	keypad_init();
 466:	0e 94 8a 00 	call	0x114	; 0x114 <keypad_init>
	SSD_init();
 46a:	0e 94 29 03 	call	0x652	; 0x652 <SSD_init>
	Output_init(pB,3);
 46e:	63 e0       	ldi	r22, 0x03	; 3
 470:	81 e0       	ldi	r24, 0x01	; 1
 472:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <Output_init>
	Timer0_init();
 476:	0e 94 31 03 	call	0x662	; 0x662 <Timer0_init>
		
	LCD_Display_String("enter your password");
 47a:	87 e7       	ldi	r24, 0x77	; 119
 47c:	90 e0       	ldi	r25, 0x00	; 0
 47e:	0e 94 8e 01 	call	0x31c	; 0x31c <LCD_Display_String>
				if(GET_BIT(PIND,0) == 0)
				{
					LCD_Clear();
					LCD_Display_String("Loading...");
					
					for(i=0; i < 10 ; i++)
 482:	10 e0       	ldi	r17, 0x00	; 0
 484:	d1 2f       	mov	r29, r17
			SSD_Display_BCD(0);
		}
		
		if(flag == 1)
		{
			TOG_BIT(PORTB,3);
 486:	08 e0       	ldi	r16, 0x08	; 8
		
	LCD_Display_String("enter your password");
	
	while(1)
	{
		k = KeyPad_getpressedkey();
 488:	0e 94 8f 00 	call	0x11e	; 0x11e <KeyPad_getpressedkey>
 48c:	c8 2f       	mov	r28, r24
		if(k != 100)
 48e:	84 36       	cpi	r24, 0x64	; 100
 490:	11 f0       	breq	.+4      	; 0x496 <main+0x34>
			SSD_Display_BCD(k);
 492:	0e 94 20 03 	call	0x640	; 0x640 <SSD_Display_BCD>
		key = passwordCheck(k);
 496:	8c 2f       	mov	r24, r28
 498:	0e 94 a9 01 	call	0x352	; 0x352 <passwordCheck>
		
		if(key == 1)
 49c:	81 30       	cpi	r24, 0x01	; 1
 49e:	09 f0       	breq	.+2      	; 0x4a2 <main+0x40>
 4a0:	3f c0       	rjmp	.+126    	; 0x520 <main+0xbe>
		{
			LCD_Clear();
 4a2:	0e 94 a3 01 	call	0x346	; 0x346 <LCD_Clear>
			LCD_Display_String("correct ^_^");
 4a6:	8b e8       	ldi	r24, 0x8B	; 139
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	0e 94 8e 01 	call	0x31c	; 0x31c <LCD_Display_String>
 4ae:	8f e4       	ldi	r24, 0x4F	; 79
 4b0:	93 ec       	ldi	r25, 0xC3	; 195
 4b2:	01 97       	sbiw	r24, 0x01	; 1
 4b4:	f1 f7       	brne	.-4      	; 0x4b2 <main+0x50>
 4b6:	00 c0       	rjmp	.+0      	; 0x4b8 <main+0x56>
 4b8:	00 00       	nop
			_delay_ms(200);
			LCD_Clear();
 4ba:	0e 94 a3 01 	call	0x346	; 0x346 <LCD_Clear>
			LCD_Display_String("Press The Switch");
 4be:	87 e9       	ldi	r24, 0x97	; 151
 4c0:	90 e0       	ldi	r25, 0x00	; 0
 4c2:	0e 94 8e 01 	call	0x31c	; 0x31c <LCD_Display_String>

			do
			{
				i=0;
				if(GET_BIT(PIND,0) == 0)
 4c6:	80 99       	sbic	0x10, 0	; 16
 4c8:	fe cf       	rjmp	.-4      	; 0x4c6 <main+0x64>
				{
					LCD_Clear();
 4ca:	0e 94 a3 01 	call	0x346	; 0x346 <LCD_Clear>
					LCD_Display_String("Loading...");
 4ce:	88 ea       	ldi	r24, 0xA8	; 168
 4d0:	90 e0       	ldi	r25, 0x00	; 0
 4d2:	0e 94 8e 01 	call	0x31c	; 0x31c <LCD_Display_String>
					
					for(i=0; i < 10 ; i++)
 4d6:	cd 2f       	mov	r28, r29
					{
						SSD_Display_BCD(i);
 4d8:	8c 2f       	mov	r24, r28
 4da:	0e 94 20 03 	call	0x640	; 0x640 <SSD_Display_BCD>
 4de:	8f e4       	ldi	r24, 0x4F	; 79
 4e0:	93 ec       	ldi	r25, 0xC3	; 195
 4e2:	01 97       	sbiw	r24, 0x01	; 1
 4e4:	f1 f7       	brne	.-4      	; 0x4e2 <main+0x80>
 4e6:	00 c0       	rjmp	.+0      	; 0x4e8 <main+0x86>
 4e8:	00 00       	nop
				if(GET_BIT(PIND,0) == 0)
				{
					LCD_Clear();
					LCD_Display_String("Loading...");
					
					for(i=0; i < 10 ; i++)
 4ea:	cf 5f       	subi	r28, 0xFF	; 255
 4ec:	ca 30       	cpi	r28, 0x0A	; 10
 4ee:	a1 f7       	brne	.-24     	; 0x4d8 <main+0x76>
					{
						SSD_Display_BCD(i);
						_delay_ms(200);
					}				
					LCD_Clear();
 4f0:	0e 94 a3 01 	call	0x346	; 0x346 <LCD_Clear>
					LCD_Display_String("Done!");
 4f4:	83 eb       	ldi	r24, 0xB3	; 179
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	0e 94 8e 01 	call	0x31c	; 0x31c <LCD_Display_String>
 4fc:	9f e3       	ldi	r25, 0x3F	; 63
 4fe:	2d e0       	ldi	r18, 0x0D	; 13
 500:	83 e0       	ldi	r24, 0x03	; 3
 502:	91 50       	subi	r25, 0x01	; 1
 504:	20 40       	sbci	r18, 0x00	; 0
 506:	80 40       	sbci	r24, 0x00	; 0
 508:	e1 f7       	brne	.-8      	; 0x502 <main+0xa0>
 50a:	00 c0       	rjmp	.+0      	; 0x50c <main+0xaa>
 50c:	00 00       	nop
				if( i > 9 ){
					break;
				}
			}while(1);
			
			LCD_Clear();
 50e:	0e 94 a3 01 	call	0x346	; 0x346 <LCD_Clear>
			LCD_Display_String("enter your password");
 512:	87 e7       	ldi	r24, 0x77	; 119
 514:	90 e0       	ldi	r25, 0x00	; 0
 516:	0e 94 8e 01 	call	0x31c	; 0x31c <LCD_Display_String>
			SSD_Display_BCD(0);
 51a:	8d 2f       	mov	r24, r29
 51c:	0e 94 20 03 	call	0x640	; 0x640 <SSD_Display_BCD>
		}
		
		if(flag == 1)
 520:	80 91 cf 00 	lds	r24, 0x00CF
 524:	81 30       	cpi	r24, 0x01	; 1
 526:	09 f0       	breq	.+2      	; 0x52a <main+0xc8>
 528:	af cf       	rjmp	.-162    	; 0x488 <main+0x26>
		{
			TOG_BIT(PORTB,3);
 52a:	88 b3       	in	r24, 0x18	; 24
 52c:	80 27       	eor	r24, r16
 52e:	88 bb       	out	0x18, r24	; 24
			LCD_Clear();
 530:	0e 94 a3 01 	call	0x346	; 0x346 <LCD_Clear>
			LCD_Display_String("OverFlow");
 534:	89 eb       	ldi	r24, 0xB9	; 185
 536:	90 e0       	ldi	r25, 0x00	; 0
 538:	0e 94 8e 01 	call	0x31c	; 0x31c <LCD_Display_String>
			LCD_Goto_XY(1,0);
 53c:	61 2f       	mov	r22, r17
 53e:	81 e0       	ldi	r24, 0x01	; 1
 540:	0e 94 76 01 	call	0x2ec	; 0x2ec <LCD_Goto_XY>
			LCD_Display_String("Interrupt!!");
 544:	82 ec       	ldi	r24, 0xC2	; 194
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	0e 94 8e 01 	call	0x31c	; 0x31c <LCD_Display_String>
 54c:	9f e9       	ldi	r25, 0x9F	; 159
 54e:	26 e8       	ldi	r18, 0x86	; 134
 550:	81 e0       	ldi	r24, 0x01	; 1
 552:	91 50       	subi	r25, 0x01	; 1
 554:	20 40       	sbci	r18, 0x00	; 0
 556:	80 40       	sbci	r24, 0x00	; 0
 558:	e1 f7       	brne	.-8      	; 0x552 <main+0xf0>
 55a:	00 c0       	rjmp	.+0      	; 0x55c <main+0xfa>
 55c:	00 00       	nop
			_delay_ms(500);
			
			LCD_Clear();
 55e:	0e 94 a3 01 	call	0x346	; 0x346 <LCD_Clear>
			LCD_Display_String("enter your password");
 562:	87 e7       	ldi	r24, 0x77	; 119
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	0e 94 8e 01 	call	0x31c	; 0x31c <LCD_Display_String>
			flag = 0; 
 56a:	10 93 cf 00 	sts	0x00CF, r17
 56e:	8c cf       	rjmp	.-232    	; 0x488 <main+0x26>

00000570 <__vector_11>:
	}
}


ISR(TIMER0_OVF_vect)
{
 570:	1f 92       	push	r1
 572:	0f 92       	push	r0
 574:	0f b6       	in	r0, 0x3f	; 63
 576:	0f 92       	push	r0
 578:	11 24       	eor	r1, r1
 57a:	8f 93       	push	r24
	if( ++counter1 > 12)
 57c:	80 91 d0 00 	lds	r24, 0x00D0
 580:	8f 5f       	subi	r24, 0xFF	; 255
 582:	80 93 d0 00 	sts	0x00D0, r24
 586:	8d 30       	cpi	r24, 0x0D	; 13
 588:	28 f0       	brcs	.+10     	; 0x594 <__vector_11+0x24>
	{
		flag = 1;
 58a:	81 e0       	ldi	r24, 0x01	; 1
 58c:	80 93 cf 00 	sts	0x00CF, r24
		counter1 = 0;
 590:	10 92 d0 00 	sts	0x00D0, r1
	}
 594:	8f 91       	pop	r24
 596:	0f 90       	pop	r0
 598:	0f be       	out	0x3f, r0	; 63
 59a:	0f 90       	pop	r0
 59c:	1f 90       	pop	r1
 59e:	18 95       	reti

000005a0 <Output_init>:
	}	
}

void Output_init(PORTS Port , TU08 pin)
{
	switch(Port)
 5a0:	81 30       	cpi	r24, 0x01	; 1
 5a2:	c1 f0       	breq	.+48     	; 0x5d4 <Output_init+0x34>
 5a4:	28 f0       	brcs	.+10     	; 0x5b0 <Output_init+0x10>
 5a6:	82 30       	cpi	r24, 0x02	; 2
 5a8:	39 f1       	breq	.+78     	; 0x5f8 <Output_init+0x58>
 5aa:	83 30       	cpi	r24, 0x03	; 3
 5ac:	b9 f1       	breq	.+110    	; 0x61c <Output_init+0x7c>
 5ae:	08 95       	ret
	{
		case pA :
			SET_BIT(DDRA,pin);
 5b0:	2a b3       	in	r18, 0x1a	; 26
 5b2:	81 e0       	ldi	r24, 0x01	; 1
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	ac 01       	movw	r20, r24
 5b8:	02 c0       	rjmp	.+4      	; 0x5be <Output_init+0x1e>
 5ba:	44 0f       	add	r20, r20
 5bc:	55 1f       	adc	r21, r21
 5be:	6a 95       	dec	r22
 5c0:	e2 f7       	brpl	.-8      	; 0x5ba <Output_init+0x1a>
 5c2:	ba 01       	movw	r22, r20
 5c4:	82 2f       	mov	r24, r18
 5c6:	84 2b       	or	r24, r20
 5c8:	8a bb       	out	0x1a, r24	; 26
			CLR_BIT(PORTA,pin);
 5ca:	8b b3       	in	r24, 0x1b	; 27
 5cc:	60 95       	com	r22
 5ce:	68 23       	and	r22, r24
 5d0:	6b bb       	out	0x1b, r22	; 27
			break;
 5d2:	08 95       	ret
		case pB :
			SET_BIT(DDRB,pin);
 5d4:	27 b3       	in	r18, 0x17	; 23
 5d6:	81 e0       	ldi	r24, 0x01	; 1
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	ac 01       	movw	r20, r24
 5dc:	02 c0       	rjmp	.+4      	; 0x5e2 <Output_init+0x42>
 5de:	44 0f       	add	r20, r20
 5e0:	55 1f       	adc	r21, r21
 5e2:	6a 95       	dec	r22
 5e4:	e2 f7       	brpl	.-8      	; 0x5de <Output_init+0x3e>
 5e6:	ba 01       	movw	r22, r20
 5e8:	82 2f       	mov	r24, r18
 5ea:	84 2b       	or	r24, r20
 5ec:	87 bb       	out	0x17, r24	; 23
			CLR_BIT(PORTB,pin);
 5ee:	88 b3       	in	r24, 0x18	; 24
 5f0:	60 95       	com	r22
 5f2:	68 23       	and	r22, r24
 5f4:	68 bb       	out	0x18, r22	; 24
			break;
 5f6:	08 95       	ret
		case pC :
			SET_BIT(DDRC,pin);
 5f8:	24 b3       	in	r18, 0x14	; 20
 5fa:	81 e0       	ldi	r24, 0x01	; 1
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	ac 01       	movw	r20, r24
 600:	02 c0       	rjmp	.+4      	; 0x606 <Output_init+0x66>
 602:	44 0f       	add	r20, r20
 604:	55 1f       	adc	r21, r21
 606:	6a 95       	dec	r22
 608:	e2 f7       	brpl	.-8      	; 0x602 <Output_init+0x62>
 60a:	ba 01       	movw	r22, r20
 60c:	82 2f       	mov	r24, r18
 60e:	84 2b       	or	r24, r20
 610:	84 bb       	out	0x14, r24	; 20
			CLR_BIT(PORTC,pin);
 612:	85 b3       	in	r24, 0x15	; 21
 614:	60 95       	com	r22
 616:	68 23       	and	r22, r24
 618:	65 bb       	out	0x15, r22	; 21
			break;
 61a:	08 95       	ret
		case pD :
			SET_BIT(DDRD,pin);
 61c:	21 b3       	in	r18, 0x11	; 17
 61e:	81 e0       	ldi	r24, 0x01	; 1
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	ac 01       	movw	r20, r24
 624:	02 c0       	rjmp	.+4      	; 0x62a <Output_init+0x8a>
 626:	44 0f       	add	r20, r20
 628:	55 1f       	adc	r21, r21
 62a:	6a 95       	dec	r22
 62c:	e2 f7       	brpl	.-8      	; 0x626 <Output_init+0x86>
 62e:	ba 01       	movw	r22, r20
 630:	82 2f       	mov	r24, r18
 632:	84 2b       	or	r24, r20
 634:	81 bb       	out	0x11, r24	; 17
			CLR_BIT(PORTD,pin);
 636:	82 b3       	in	r24, 0x12	; 18
 638:	60 95       	com	r22
 63a:	68 23       	and	r22, r24
 63c:	62 bb       	out	0x12, r22	; 18
 63e:	08 95       	ret

00000640 <SSD_Display_BCD>:
 640:	22 b3       	in	r18, 0x12	; 18
 642:	30 e1       	ldi	r19, 0x10	; 16
 644:	83 9f       	mul	r24, r19
 646:	c0 01       	movw	r24, r0
 648:	11 24       	eor	r1, r1
 64a:	2f 70       	andi	r18, 0x0F	; 15
 64c:	82 2b       	or	r24, r18
 64e:	82 bb       	out	0x12, r24	; 18
 650:	08 95       	ret

00000652 <SSD_init>:
 652:	80 ef       	ldi	r24, 0xF0	; 240
 654:	81 bb       	out	0x11, r24	; 17
 656:	8f e0       	ldi	r24, 0x0F	; 15
 658:	82 bb       	out	0x12, r24	; 18
 65a:	80 e0       	ldi	r24, 0x00	; 0
 65c:	0e 94 20 03 	call	0x640	; 0x640 <SSD_Display_BCD>
 660:	08 95       	ret

00000662 <Timer0_init>:

#include "timers.h"

void Timer0_init()
{
	SET_BIT(SREG,7);       // Enable the Global Interrupt
 662:	8f b7       	in	r24, 0x3f	; 63
 664:	80 68       	ori	r24, 0x80	; 128
 666:	8f bf       	out	0x3f, r24	; 63
	SET_BIT(TIMSK,TOIE0); // Enable the Overflow Interrupt
 668:	89 b7       	in	r24, 0x39	; 57
 66a:	81 60       	ori	r24, 0x01	; 1
 66c:	89 bf       	out	0x39, r24	; 57

	/* set the mode to be normal mode */
	CLR_BIT(TCCR0,WGM00);
 66e:	83 b7       	in	r24, 0x33	; 51
 670:	8f 7b       	andi	r24, 0xBF	; 191
 672:	83 bf       	out	0x33, r24	; 51
	CLR_BIT(TCCR0,WGM01);
 674:	83 b7       	in	r24, 0x33	; 51
 676:	87 7f       	andi	r24, 0xF7	; 247
 678:	83 bf       	out	0x33, r24	; 51
	
	/* set the value of the prescaler to = 1024 */
	SET_BIT(TCCR0,CS02);
 67a:	83 b7       	in	r24, 0x33	; 51
 67c:	84 60       	ori	r24, 0x04	; 4
 67e:	83 bf       	out	0x33, r24	; 51
	CLR_BIT(TCCR0,CS01);
 680:	83 b7       	in	r24, 0x33	; 51
 682:	8d 7f       	andi	r24, 0xFD	; 253
 684:	83 bf       	out	0x33, r24	; 51
	SET_BIT(TCCR0,CS00);
 686:	83 b7       	in	r24, 0x33	; 51
 688:	81 60       	ori	r24, 0x01	; 1
 68a:	83 bf       	out	0x33, r24	; 51
 68c:	08 95       	ret

0000068e <__subsf3>:
 68e:	50 58       	subi	r21, 0x80	; 128

00000690 <__addsf3>:
 690:	bb 27       	eor	r27, r27
 692:	aa 27       	eor	r26, r26
 694:	0e d0       	rcall	.+28     	; 0x6b2 <__addsf3x>
 696:	e5 c0       	rjmp	.+458    	; 0x862 <__fp_round>
 698:	d6 d0       	rcall	.+428    	; 0x846 <__fp_pscA>
 69a:	30 f0       	brcs	.+12     	; 0x6a8 <__addsf3+0x18>
 69c:	db d0       	rcall	.+438    	; 0x854 <__fp_pscB>
 69e:	20 f0       	brcs	.+8      	; 0x6a8 <__addsf3+0x18>
 6a0:	31 f4       	brne	.+12     	; 0x6ae <__addsf3+0x1e>
 6a2:	9f 3f       	cpi	r25, 0xFF	; 255
 6a4:	11 f4       	brne	.+4      	; 0x6aa <__addsf3+0x1a>
 6a6:	1e f4       	brtc	.+6      	; 0x6ae <__addsf3+0x1e>
 6a8:	cb c0       	rjmp	.+406    	; 0x840 <__fp_nan>
 6aa:	0e f4       	brtc	.+2      	; 0x6ae <__addsf3+0x1e>
 6ac:	e0 95       	com	r30
 6ae:	e7 fb       	bst	r30, 7
 6b0:	c1 c0       	rjmp	.+386    	; 0x834 <__fp_inf>

000006b2 <__addsf3x>:
 6b2:	e9 2f       	mov	r30, r25
 6b4:	e7 d0       	rcall	.+462    	; 0x884 <__fp_split3>
 6b6:	80 f3       	brcs	.-32     	; 0x698 <__addsf3+0x8>
 6b8:	ba 17       	cp	r27, r26
 6ba:	62 07       	cpc	r22, r18
 6bc:	73 07       	cpc	r23, r19
 6be:	84 07       	cpc	r24, r20
 6c0:	95 07       	cpc	r25, r21
 6c2:	18 f0       	brcs	.+6      	; 0x6ca <__addsf3x+0x18>
 6c4:	71 f4       	brne	.+28     	; 0x6e2 <__addsf3x+0x30>
 6c6:	9e f5       	brtc	.+102    	; 0x72e <__addsf3x+0x7c>
 6c8:	ff c0       	rjmp	.+510    	; 0x8c8 <__fp_zero>
 6ca:	0e f4       	brtc	.+2      	; 0x6ce <__addsf3x+0x1c>
 6cc:	e0 95       	com	r30
 6ce:	0b 2e       	mov	r0, r27
 6d0:	ba 2f       	mov	r27, r26
 6d2:	a0 2d       	mov	r26, r0
 6d4:	0b 01       	movw	r0, r22
 6d6:	b9 01       	movw	r22, r18
 6d8:	90 01       	movw	r18, r0
 6da:	0c 01       	movw	r0, r24
 6dc:	ca 01       	movw	r24, r20
 6de:	a0 01       	movw	r20, r0
 6e0:	11 24       	eor	r1, r1
 6e2:	ff 27       	eor	r31, r31
 6e4:	59 1b       	sub	r21, r25
 6e6:	99 f0       	breq	.+38     	; 0x70e <__addsf3x+0x5c>
 6e8:	59 3f       	cpi	r21, 0xF9	; 249
 6ea:	50 f4       	brcc	.+20     	; 0x700 <__addsf3x+0x4e>
 6ec:	50 3e       	cpi	r21, 0xE0	; 224
 6ee:	68 f1       	brcs	.+90     	; 0x74a <__addsf3x+0x98>
 6f0:	1a 16       	cp	r1, r26
 6f2:	f0 40       	sbci	r31, 0x00	; 0
 6f4:	a2 2f       	mov	r26, r18
 6f6:	23 2f       	mov	r18, r19
 6f8:	34 2f       	mov	r19, r20
 6fa:	44 27       	eor	r20, r20
 6fc:	58 5f       	subi	r21, 0xF8	; 248
 6fe:	f3 cf       	rjmp	.-26     	; 0x6e6 <__addsf3x+0x34>
 700:	46 95       	lsr	r20
 702:	37 95       	ror	r19
 704:	27 95       	ror	r18
 706:	a7 95       	ror	r26
 708:	f0 40       	sbci	r31, 0x00	; 0
 70a:	53 95       	inc	r21
 70c:	c9 f7       	brne	.-14     	; 0x700 <__addsf3x+0x4e>
 70e:	7e f4       	brtc	.+30     	; 0x72e <__addsf3x+0x7c>
 710:	1f 16       	cp	r1, r31
 712:	ba 0b       	sbc	r27, r26
 714:	62 0b       	sbc	r22, r18
 716:	73 0b       	sbc	r23, r19
 718:	84 0b       	sbc	r24, r20
 71a:	ba f0       	brmi	.+46     	; 0x74a <__addsf3x+0x98>
 71c:	91 50       	subi	r25, 0x01	; 1
 71e:	a1 f0       	breq	.+40     	; 0x748 <__addsf3x+0x96>
 720:	ff 0f       	add	r31, r31
 722:	bb 1f       	adc	r27, r27
 724:	66 1f       	adc	r22, r22
 726:	77 1f       	adc	r23, r23
 728:	88 1f       	adc	r24, r24
 72a:	c2 f7       	brpl	.-16     	; 0x71c <__addsf3x+0x6a>
 72c:	0e c0       	rjmp	.+28     	; 0x74a <__addsf3x+0x98>
 72e:	ba 0f       	add	r27, r26
 730:	62 1f       	adc	r22, r18
 732:	73 1f       	adc	r23, r19
 734:	84 1f       	adc	r24, r20
 736:	48 f4       	brcc	.+18     	; 0x74a <__addsf3x+0x98>
 738:	87 95       	ror	r24
 73a:	77 95       	ror	r23
 73c:	67 95       	ror	r22
 73e:	b7 95       	ror	r27
 740:	f7 95       	ror	r31
 742:	9e 3f       	cpi	r25, 0xFE	; 254
 744:	08 f0       	brcs	.+2      	; 0x748 <__addsf3x+0x96>
 746:	b3 cf       	rjmp	.-154    	; 0x6ae <__addsf3+0x1e>
 748:	93 95       	inc	r25
 74a:	88 0f       	add	r24, r24
 74c:	08 f0       	brcs	.+2      	; 0x750 <__addsf3x+0x9e>
 74e:	99 27       	eor	r25, r25
 750:	ee 0f       	add	r30, r30
 752:	97 95       	ror	r25
 754:	87 95       	ror	r24
 756:	08 95       	ret

00000758 <__fixsfsi>:
 758:	04 d0       	rcall	.+8      	; 0x762 <__fixunssfsi>
 75a:	68 94       	set
 75c:	b1 11       	cpse	r27, r1
 75e:	b5 c0       	rjmp	.+362    	; 0x8ca <__fp_szero>
 760:	08 95       	ret

00000762 <__fixunssfsi>:
 762:	98 d0       	rcall	.+304    	; 0x894 <__fp_splitA>
 764:	88 f0       	brcs	.+34     	; 0x788 <__fixunssfsi+0x26>
 766:	9f 57       	subi	r25, 0x7F	; 127
 768:	90 f0       	brcs	.+36     	; 0x78e <__fixunssfsi+0x2c>
 76a:	b9 2f       	mov	r27, r25
 76c:	99 27       	eor	r25, r25
 76e:	b7 51       	subi	r27, 0x17	; 23
 770:	a0 f0       	brcs	.+40     	; 0x79a <__fixunssfsi+0x38>
 772:	d1 f0       	breq	.+52     	; 0x7a8 <__fixunssfsi+0x46>
 774:	66 0f       	add	r22, r22
 776:	77 1f       	adc	r23, r23
 778:	88 1f       	adc	r24, r24
 77a:	99 1f       	adc	r25, r25
 77c:	1a f0       	brmi	.+6      	; 0x784 <__fixunssfsi+0x22>
 77e:	ba 95       	dec	r27
 780:	c9 f7       	brne	.-14     	; 0x774 <__fixunssfsi+0x12>
 782:	12 c0       	rjmp	.+36     	; 0x7a8 <__fixunssfsi+0x46>
 784:	b1 30       	cpi	r27, 0x01	; 1
 786:	81 f0       	breq	.+32     	; 0x7a8 <__fixunssfsi+0x46>
 788:	9f d0       	rcall	.+318    	; 0x8c8 <__fp_zero>
 78a:	b1 e0       	ldi	r27, 0x01	; 1
 78c:	08 95       	ret
 78e:	9c c0       	rjmp	.+312    	; 0x8c8 <__fp_zero>
 790:	67 2f       	mov	r22, r23
 792:	78 2f       	mov	r23, r24
 794:	88 27       	eor	r24, r24
 796:	b8 5f       	subi	r27, 0xF8	; 248
 798:	39 f0       	breq	.+14     	; 0x7a8 <__fixunssfsi+0x46>
 79a:	b9 3f       	cpi	r27, 0xF9	; 249
 79c:	cc f3       	brlt	.-14     	; 0x790 <__fixunssfsi+0x2e>
 79e:	86 95       	lsr	r24
 7a0:	77 95       	ror	r23
 7a2:	67 95       	ror	r22
 7a4:	b3 95       	inc	r27
 7a6:	d9 f7       	brne	.-10     	; 0x79e <__fixunssfsi+0x3c>
 7a8:	3e f4       	brtc	.+14     	; 0x7b8 <__fixunssfsi+0x56>
 7aa:	90 95       	com	r25
 7ac:	80 95       	com	r24
 7ae:	70 95       	com	r23
 7b0:	61 95       	neg	r22
 7b2:	7f 4f       	sbci	r23, 0xFF	; 255
 7b4:	8f 4f       	sbci	r24, 0xFF	; 255
 7b6:	9f 4f       	sbci	r25, 0xFF	; 255
 7b8:	08 95       	ret

000007ba <__floatunsisf>:
 7ba:	e8 94       	clt
 7bc:	09 c0       	rjmp	.+18     	; 0x7d0 <__floatsisf+0x12>

000007be <__floatsisf>:
 7be:	97 fb       	bst	r25, 7
 7c0:	3e f4       	brtc	.+14     	; 0x7d0 <__floatsisf+0x12>
 7c2:	90 95       	com	r25
 7c4:	80 95       	com	r24
 7c6:	70 95       	com	r23
 7c8:	61 95       	neg	r22
 7ca:	7f 4f       	sbci	r23, 0xFF	; 255
 7cc:	8f 4f       	sbci	r24, 0xFF	; 255
 7ce:	9f 4f       	sbci	r25, 0xFF	; 255
 7d0:	99 23       	and	r25, r25
 7d2:	a9 f0       	breq	.+42     	; 0x7fe <__floatsisf+0x40>
 7d4:	f9 2f       	mov	r31, r25
 7d6:	96 e9       	ldi	r25, 0x96	; 150
 7d8:	bb 27       	eor	r27, r27
 7da:	93 95       	inc	r25
 7dc:	f6 95       	lsr	r31
 7de:	87 95       	ror	r24
 7e0:	77 95       	ror	r23
 7e2:	67 95       	ror	r22
 7e4:	b7 95       	ror	r27
 7e6:	f1 11       	cpse	r31, r1
 7e8:	f8 cf       	rjmp	.-16     	; 0x7da <__floatsisf+0x1c>
 7ea:	fa f4       	brpl	.+62     	; 0x82a <__floatsisf+0x6c>
 7ec:	bb 0f       	add	r27, r27
 7ee:	11 f4       	brne	.+4      	; 0x7f4 <__floatsisf+0x36>
 7f0:	60 ff       	sbrs	r22, 0
 7f2:	1b c0       	rjmp	.+54     	; 0x82a <__floatsisf+0x6c>
 7f4:	6f 5f       	subi	r22, 0xFF	; 255
 7f6:	7f 4f       	sbci	r23, 0xFF	; 255
 7f8:	8f 4f       	sbci	r24, 0xFF	; 255
 7fa:	9f 4f       	sbci	r25, 0xFF	; 255
 7fc:	16 c0       	rjmp	.+44     	; 0x82a <__floatsisf+0x6c>
 7fe:	88 23       	and	r24, r24
 800:	11 f0       	breq	.+4      	; 0x806 <__floatsisf+0x48>
 802:	96 e9       	ldi	r25, 0x96	; 150
 804:	11 c0       	rjmp	.+34     	; 0x828 <__floatsisf+0x6a>
 806:	77 23       	and	r23, r23
 808:	21 f0       	breq	.+8      	; 0x812 <__floatsisf+0x54>
 80a:	9e e8       	ldi	r25, 0x8E	; 142
 80c:	87 2f       	mov	r24, r23
 80e:	76 2f       	mov	r23, r22
 810:	05 c0       	rjmp	.+10     	; 0x81c <__floatsisf+0x5e>
 812:	66 23       	and	r22, r22
 814:	71 f0       	breq	.+28     	; 0x832 <__floatsisf+0x74>
 816:	96 e8       	ldi	r25, 0x86	; 134
 818:	86 2f       	mov	r24, r22
 81a:	70 e0       	ldi	r23, 0x00	; 0
 81c:	60 e0       	ldi	r22, 0x00	; 0
 81e:	2a f0       	brmi	.+10     	; 0x82a <__floatsisf+0x6c>
 820:	9a 95       	dec	r25
 822:	66 0f       	add	r22, r22
 824:	77 1f       	adc	r23, r23
 826:	88 1f       	adc	r24, r24
 828:	da f7       	brpl	.-10     	; 0x820 <__floatsisf+0x62>
 82a:	88 0f       	add	r24, r24
 82c:	96 95       	lsr	r25
 82e:	87 95       	ror	r24
 830:	97 f9       	bld	r25, 7
 832:	08 95       	ret

00000834 <__fp_inf>:
 834:	97 f9       	bld	r25, 7
 836:	9f 67       	ori	r25, 0x7F	; 127
 838:	80 e8       	ldi	r24, 0x80	; 128
 83a:	70 e0       	ldi	r23, 0x00	; 0
 83c:	60 e0       	ldi	r22, 0x00	; 0
 83e:	08 95       	ret

00000840 <__fp_nan>:
 840:	9f ef       	ldi	r25, 0xFF	; 255
 842:	80 ec       	ldi	r24, 0xC0	; 192
 844:	08 95       	ret

00000846 <__fp_pscA>:
 846:	00 24       	eor	r0, r0
 848:	0a 94       	dec	r0
 84a:	16 16       	cp	r1, r22
 84c:	17 06       	cpc	r1, r23
 84e:	18 06       	cpc	r1, r24
 850:	09 06       	cpc	r0, r25
 852:	08 95       	ret

00000854 <__fp_pscB>:
 854:	00 24       	eor	r0, r0
 856:	0a 94       	dec	r0
 858:	12 16       	cp	r1, r18
 85a:	13 06       	cpc	r1, r19
 85c:	14 06       	cpc	r1, r20
 85e:	05 06       	cpc	r0, r21
 860:	08 95       	ret

00000862 <__fp_round>:
 862:	09 2e       	mov	r0, r25
 864:	03 94       	inc	r0
 866:	00 0c       	add	r0, r0
 868:	11 f4       	brne	.+4      	; 0x86e <__fp_round+0xc>
 86a:	88 23       	and	r24, r24
 86c:	52 f0       	brmi	.+20     	; 0x882 <__fp_round+0x20>
 86e:	bb 0f       	add	r27, r27
 870:	40 f4       	brcc	.+16     	; 0x882 <__fp_round+0x20>
 872:	bf 2b       	or	r27, r31
 874:	11 f4       	brne	.+4      	; 0x87a <__fp_round+0x18>
 876:	60 ff       	sbrs	r22, 0
 878:	04 c0       	rjmp	.+8      	; 0x882 <__fp_round+0x20>
 87a:	6f 5f       	subi	r22, 0xFF	; 255
 87c:	7f 4f       	sbci	r23, 0xFF	; 255
 87e:	8f 4f       	sbci	r24, 0xFF	; 255
 880:	9f 4f       	sbci	r25, 0xFF	; 255
 882:	08 95       	ret

00000884 <__fp_split3>:
 884:	57 fd       	sbrc	r21, 7
 886:	90 58       	subi	r25, 0x80	; 128
 888:	44 0f       	add	r20, r20
 88a:	55 1f       	adc	r21, r21
 88c:	59 f0       	breq	.+22     	; 0x8a4 <__fp_splitA+0x10>
 88e:	5f 3f       	cpi	r21, 0xFF	; 255
 890:	71 f0       	breq	.+28     	; 0x8ae <__fp_splitA+0x1a>
 892:	47 95       	ror	r20

00000894 <__fp_splitA>:
 894:	88 0f       	add	r24, r24
 896:	97 fb       	bst	r25, 7
 898:	99 1f       	adc	r25, r25
 89a:	61 f0       	breq	.+24     	; 0x8b4 <__fp_splitA+0x20>
 89c:	9f 3f       	cpi	r25, 0xFF	; 255
 89e:	79 f0       	breq	.+30     	; 0x8be <__fp_splitA+0x2a>
 8a0:	87 95       	ror	r24
 8a2:	08 95       	ret
 8a4:	12 16       	cp	r1, r18
 8a6:	13 06       	cpc	r1, r19
 8a8:	14 06       	cpc	r1, r20
 8aa:	55 1f       	adc	r21, r21
 8ac:	f2 cf       	rjmp	.-28     	; 0x892 <__fp_split3+0xe>
 8ae:	46 95       	lsr	r20
 8b0:	f1 df       	rcall	.-30     	; 0x894 <__fp_splitA>
 8b2:	08 c0       	rjmp	.+16     	; 0x8c4 <__fp_splitA+0x30>
 8b4:	16 16       	cp	r1, r22
 8b6:	17 06       	cpc	r1, r23
 8b8:	18 06       	cpc	r1, r24
 8ba:	99 1f       	adc	r25, r25
 8bc:	f1 cf       	rjmp	.-30     	; 0x8a0 <__fp_splitA+0xc>
 8be:	86 95       	lsr	r24
 8c0:	71 05       	cpc	r23, r1
 8c2:	61 05       	cpc	r22, r1
 8c4:	08 94       	sec
 8c6:	08 95       	ret

000008c8 <__fp_zero>:
 8c8:	e8 94       	clt

000008ca <__fp_szero>:
 8ca:	bb 27       	eor	r27, r27
 8cc:	66 27       	eor	r22, r22
 8ce:	77 27       	eor	r23, r23
 8d0:	cb 01       	movw	r24, r22
 8d2:	97 f9       	bld	r25, 7
 8d4:	08 95       	ret

000008d6 <__mulsf3>:
 8d6:	0b d0       	rcall	.+22     	; 0x8ee <__mulsf3x>
 8d8:	c4 cf       	rjmp	.-120    	; 0x862 <__fp_round>
 8da:	b5 df       	rcall	.-150    	; 0x846 <__fp_pscA>
 8dc:	28 f0       	brcs	.+10     	; 0x8e8 <__mulsf3+0x12>
 8de:	ba df       	rcall	.-140    	; 0x854 <__fp_pscB>
 8e0:	18 f0       	brcs	.+6      	; 0x8e8 <__mulsf3+0x12>
 8e2:	95 23       	and	r25, r21
 8e4:	09 f0       	breq	.+2      	; 0x8e8 <__mulsf3+0x12>
 8e6:	a6 cf       	rjmp	.-180    	; 0x834 <__fp_inf>
 8e8:	ab cf       	rjmp	.-170    	; 0x840 <__fp_nan>
 8ea:	11 24       	eor	r1, r1
 8ec:	ee cf       	rjmp	.-36     	; 0x8ca <__fp_szero>

000008ee <__mulsf3x>:
 8ee:	ca df       	rcall	.-108    	; 0x884 <__fp_split3>
 8f0:	a0 f3       	brcs	.-24     	; 0x8da <__mulsf3+0x4>

000008f2 <__mulsf3_pse>:
 8f2:	95 9f       	mul	r25, r21
 8f4:	d1 f3       	breq	.-12     	; 0x8ea <__mulsf3+0x14>
 8f6:	95 0f       	add	r25, r21
 8f8:	50 e0       	ldi	r21, 0x00	; 0
 8fa:	55 1f       	adc	r21, r21
 8fc:	62 9f       	mul	r22, r18
 8fe:	f0 01       	movw	r30, r0
 900:	72 9f       	mul	r23, r18
 902:	bb 27       	eor	r27, r27
 904:	f0 0d       	add	r31, r0
 906:	b1 1d       	adc	r27, r1
 908:	63 9f       	mul	r22, r19
 90a:	aa 27       	eor	r26, r26
 90c:	f0 0d       	add	r31, r0
 90e:	b1 1d       	adc	r27, r1
 910:	aa 1f       	adc	r26, r26
 912:	64 9f       	mul	r22, r20
 914:	66 27       	eor	r22, r22
 916:	b0 0d       	add	r27, r0
 918:	a1 1d       	adc	r26, r1
 91a:	66 1f       	adc	r22, r22
 91c:	82 9f       	mul	r24, r18
 91e:	22 27       	eor	r18, r18
 920:	b0 0d       	add	r27, r0
 922:	a1 1d       	adc	r26, r1
 924:	62 1f       	adc	r22, r18
 926:	73 9f       	mul	r23, r19
 928:	b0 0d       	add	r27, r0
 92a:	a1 1d       	adc	r26, r1
 92c:	62 1f       	adc	r22, r18
 92e:	83 9f       	mul	r24, r19
 930:	a0 0d       	add	r26, r0
 932:	61 1d       	adc	r22, r1
 934:	22 1f       	adc	r18, r18
 936:	74 9f       	mul	r23, r20
 938:	33 27       	eor	r19, r19
 93a:	a0 0d       	add	r26, r0
 93c:	61 1d       	adc	r22, r1
 93e:	23 1f       	adc	r18, r19
 940:	84 9f       	mul	r24, r20
 942:	60 0d       	add	r22, r0
 944:	21 1d       	adc	r18, r1
 946:	82 2f       	mov	r24, r18
 948:	76 2f       	mov	r23, r22
 94a:	6a 2f       	mov	r22, r26
 94c:	11 24       	eor	r1, r1
 94e:	9f 57       	subi	r25, 0x7F	; 127
 950:	50 40       	sbci	r21, 0x00	; 0
 952:	8a f0       	brmi	.+34     	; 0x976 <__mulsf3_pse+0x84>
 954:	e1 f0       	breq	.+56     	; 0x98e <__mulsf3_pse+0x9c>
 956:	88 23       	and	r24, r24
 958:	4a f0       	brmi	.+18     	; 0x96c <__mulsf3_pse+0x7a>
 95a:	ee 0f       	add	r30, r30
 95c:	ff 1f       	adc	r31, r31
 95e:	bb 1f       	adc	r27, r27
 960:	66 1f       	adc	r22, r22
 962:	77 1f       	adc	r23, r23
 964:	88 1f       	adc	r24, r24
 966:	91 50       	subi	r25, 0x01	; 1
 968:	50 40       	sbci	r21, 0x00	; 0
 96a:	a9 f7       	brne	.-22     	; 0x956 <__mulsf3_pse+0x64>
 96c:	9e 3f       	cpi	r25, 0xFE	; 254
 96e:	51 05       	cpc	r21, r1
 970:	70 f0       	brcs	.+28     	; 0x98e <__mulsf3_pse+0x9c>
 972:	60 cf       	rjmp	.-320    	; 0x834 <__fp_inf>
 974:	aa cf       	rjmp	.-172    	; 0x8ca <__fp_szero>
 976:	5f 3f       	cpi	r21, 0xFF	; 255
 978:	ec f3       	brlt	.-6      	; 0x974 <__mulsf3_pse+0x82>
 97a:	98 3e       	cpi	r25, 0xE8	; 232
 97c:	dc f3       	brlt	.-10     	; 0x974 <__mulsf3_pse+0x82>
 97e:	86 95       	lsr	r24
 980:	77 95       	ror	r23
 982:	67 95       	ror	r22
 984:	b7 95       	ror	r27
 986:	f7 95       	ror	r31
 988:	e7 95       	ror	r30
 98a:	9f 5f       	subi	r25, 0xFF	; 255
 98c:	c1 f7       	brne	.-16     	; 0x97e <__mulsf3_pse+0x8c>
 98e:	fe 2b       	or	r31, r30
 990:	88 0f       	add	r24, r24
 992:	91 1d       	adc	r25, r1
 994:	96 95       	lsr	r25
 996:	87 95       	ror	r24
 998:	97 f9       	bld	r25, 7
 99a:	08 95       	ret

0000099c <pow>:
 99c:	fa 01       	movw	r30, r20
 99e:	ee 0f       	add	r30, r30
 9a0:	ff 1f       	adc	r31, r31
 9a2:	30 96       	adiw	r30, 0x00	; 0
 9a4:	21 05       	cpc	r18, r1
 9a6:	31 05       	cpc	r19, r1
 9a8:	99 f1       	breq	.+102    	; 0xa10 <pow+0x74>
 9aa:	61 15       	cp	r22, r1
 9ac:	71 05       	cpc	r23, r1
 9ae:	61 f4       	brne	.+24     	; 0x9c8 <pow+0x2c>
 9b0:	80 38       	cpi	r24, 0x80	; 128
 9b2:	bf e3       	ldi	r27, 0x3F	; 63
 9b4:	9b 07       	cpc	r25, r27
 9b6:	49 f1       	breq	.+82     	; 0xa0a <pow+0x6e>
 9b8:	68 94       	set
 9ba:	90 38       	cpi	r25, 0x80	; 128
 9bc:	81 05       	cpc	r24, r1
 9be:	61 f0       	breq	.+24     	; 0x9d8 <pow+0x3c>
 9c0:	80 38       	cpi	r24, 0x80	; 128
 9c2:	bf ef       	ldi	r27, 0xFF	; 255
 9c4:	9b 07       	cpc	r25, r27
 9c6:	41 f0       	breq	.+16     	; 0x9d8 <pow+0x3c>
 9c8:	99 23       	and	r25, r25
 9ca:	42 f5       	brpl	.+80     	; 0xa1c <pow+0x80>
 9cc:	ff 3f       	cpi	r31, 0xFF	; 255
 9ce:	e1 05       	cpc	r30, r1
 9d0:	31 05       	cpc	r19, r1
 9d2:	21 05       	cpc	r18, r1
 9d4:	11 f1       	breq	.+68     	; 0xa1a <pow+0x7e>
 9d6:	e8 94       	clt
 9d8:	08 94       	sec
 9da:	e7 95       	ror	r30
 9dc:	d9 01       	movw	r26, r18
 9de:	aa 23       	and	r26, r26
 9e0:	29 f4       	brne	.+10     	; 0x9ec <pow+0x50>
 9e2:	ab 2f       	mov	r26, r27
 9e4:	be 2f       	mov	r27, r30
 9e6:	f8 5f       	subi	r31, 0xF8	; 248
 9e8:	d0 f3       	brcs	.-12     	; 0x9de <pow+0x42>
 9ea:	10 c0       	rjmp	.+32     	; 0xa0c <pow+0x70>
 9ec:	ff 5f       	subi	r31, 0xFF	; 255
 9ee:	70 f4       	brcc	.+28     	; 0xa0c <pow+0x70>
 9f0:	a6 95       	lsr	r26
 9f2:	e0 f7       	brcc	.-8      	; 0x9ec <pow+0x50>
 9f4:	f7 39       	cpi	r31, 0x97	; 151
 9f6:	50 f0       	brcs	.+20     	; 0xa0c <pow+0x70>
 9f8:	19 f0       	breq	.+6      	; 0xa00 <pow+0x64>
 9fa:	ff 3a       	cpi	r31, 0xAF	; 175
 9fc:	38 f4       	brcc	.+14     	; 0xa0c <pow+0x70>
 9fe:	9f 77       	andi	r25, 0x7F	; 127
 a00:	9f 93       	push	r25
 a02:	0c d0       	rcall	.+24     	; 0xa1c <pow+0x80>
 a04:	0f 90       	pop	r0
 a06:	07 fc       	sbrc	r0, 7
 a08:	90 58       	subi	r25, 0x80	; 128
 a0a:	08 95       	ret
 a0c:	3e f0       	brts	.+14     	; 0xa1c <pow+0x80>
 a0e:	18 cf       	rjmp	.-464    	; 0x840 <__fp_nan>
 a10:	60 e0       	ldi	r22, 0x00	; 0
 a12:	70 e0       	ldi	r23, 0x00	; 0
 a14:	80 e8       	ldi	r24, 0x80	; 128
 a16:	9f e3       	ldi	r25, 0x3F	; 63
 a18:	08 95       	ret
 a1a:	4f e7       	ldi	r20, 0x7F	; 127
 a1c:	9f 77       	andi	r25, 0x7F	; 127
 a1e:	5f 93       	push	r21
 a20:	4f 93       	push	r20
 a22:	3f 93       	push	r19
 a24:	2f 93       	push	r18
 a26:	9e d0       	rcall	.+316    	; 0xb64 <log>
 a28:	2f 91       	pop	r18
 a2a:	3f 91       	pop	r19
 a2c:	4f 91       	pop	r20
 a2e:	5f 91       	pop	r21
 a30:	52 df       	rcall	.-348    	; 0x8d6 <__mulsf3>
 a32:	05 c0       	rjmp	.+10     	; 0xa3e <exp>
 a34:	19 f4       	brne	.+6      	; 0xa3c <pow+0xa0>
 a36:	0e f0       	brts	.+2      	; 0xa3a <pow+0x9e>
 a38:	fd ce       	rjmp	.-518    	; 0x834 <__fp_inf>
 a3a:	46 cf       	rjmp	.-372    	; 0x8c8 <__fp_zero>
 a3c:	01 cf       	rjmp	.-510    	; 0x840 <__fp_nan>

00000a3e <exp>:
 a3e:	2a df       	rcall	.-428    	; 0x894 <__fp_splitA>
 a40:	c8 f3       	brcs	.-14     	; 0xa34 <pow+0x98>
 a42:	96 38       	cpi	r25, 0x86	; 134
 a44:	c0 f7       	brcc	.-16     	; 0xa36 <pow+0x9a>
 a46:	07 f8       	bld	r0, 7
 a48:	0f 92       	push	r0
 a4a:	e8 94       	clt
 a4c:	2b e3       	ldi	r18, 0x3B	; 59
 a4e:	3a ea       	ldi	r19, 0xAA	; 170
 a50:	48 eb       	ldi	r20, 0xB8	; 184
 a52:	5f e7       	ldi	r21, 0x7F	; 127
 a54:	4e df       	rcall	.-356    	; 0x8f2 <__mulsf3_pse>
 a56:	0f 92       	push	r0
 a58:	0f 92       	push	r0
 a5a:	0f 92       	push	r0
 a5c:	4d b7       	in	r20, 0x3d	; 61
 a5e:	5e b7       	in	r21, 0x3e	; 62
 a60:	0f 92       	push	r0
 a62:	c0 d0       	rcall	.+384    	; 0xbe4 <modf>
 a64:	e4 e5       	ldi	r30, 0x54	; 84
 a66:	f0 e0       	ldi	r31, 0x00	; 0
 a68:	16 d0       	rcall	.+44     	; 0xa96 <__fp_powser>
 a6a:	4f 91       	pop	r20
 a6c:	5f 91       	pop	r21
 a6e:	ef 91       	pop	r30
 a70:	ff 91       	pop	r31
 a72:	e5 95       	asr	r30
 a74:	ee 1f       	adc	r30, r30
 a76:	ff 1f       	adc	r31, r31
 a78:	49 f0       	breq	.+18     	; 0xa8c <exp+0x4e>
 a7a:	fe 57       	subi	r31, 0x7E	; 126
 a7c:	e0 68       	ori	r30, 0x80	; 128
 a7e:	44 27       	eor	r20, r20
 a80:	ee 0f       	add	r30, r30
 a82:	44 1f       	adc	r20, r20
 a84:	fa 95       	dec	r31
 a86:	e1 f7       	brne	.-8      	; 0xa80 <exp+0x42>
 a88:	41 95       	neg	r20
 a8a:	55 0b       	sbc	r21, r21
 a8c:	32 d0       	rcall	.+100    	; 0xaf2 <ldexp>
 a8e:	0f 90       	pop	r0
 a90:	07 fe       	sbrs	r0, 7
 a92:	26 c0       	rjmp	.+76     	; 0xae0 <inverse>
 a94:	08 95       	ret

00000a96 <__fp_powser>:
 a96:	df 93       	push	r29
 a98:	cf 93       	push	r28
 a9a:	1f 93       	push	r17
 a9c:	0f 93       	push	r16
 a9e:	ff 92       	push	r15
 aa0:	ef 92       	push	r14
 aa2:	df 92       	push	r13
 aa4:	7b 01       	movw	r14, r22
 aa6:	8c 01       	movw	r16, r24
 aa8:	68 94       	set
 aaa:	05 c0       	rjmp	.+10     	; 0xab6 <__fp_powser+0x20>
 aac:	da 2e       	mov	r13, r26
 aae:	ef 01       	movw	r28, r30
 ab0:	1e df       	rcall	.-452    	; 0x8ee <__mulsf3x>
 ab2:	fe 01       	movw	r30, r28
 ab4:	e8 94       	clt
 ab6:	a5 91       	lpm	r26, Z+
 ab8:	25 91       	lpm	r18, Z+
 aba:	35 91       	lpm	r19, Z+
 abc:	45 91       	lpm	r20, Z+
 abe:	55 91       	lpm	r21, Z+
 ac0:	ae f3       	brts	.-22     	; 0xaac <__fp_powser+0x16>
 ac2:	ef 01       	movw	r28, r30
 ac4:	f6 dd       	rcall	.-1044   	; 0x6b2 <__addsf3x>
 ac6:	fe 01       	movw	r30, r28
 ac8:	97 01       	movw	r18, r14
 aca:	a8 01       	movw	r20, r16
 acc:	da 94       	dec	r13
 ace:	79 f7       	brne	.-34     	; 0xaae <__fp_powser+0x18>
 ad0:	df 90       	pop	r13
 ad2:	ef 90       	pop	r14
 ad4:	ff 90       	pop	r15
 ad6:	0f 91       	pop	r16
 ad8:	1f 91       	pop	r17
 ada:	cf 91       	pop	r28
 adc:	df 91       	pop	r29
 ade:	08 95       	ret

00000ae0 <inverse>:
 ae0:	9b 01       	movw	r18, r22
 ae2:	ac 01       	movw	r20, r24
 ae4:	60 e0       	ldi	r22, 0x00	; 0
 ae6:	70 e0       	ldi	r23, 0x00	; 0
 ae8:	80 e8       	ldi	r24, 0x80	; 128
 aea:	9f e3       	ldi	r25, 0x3F	; 63
 aec:	ae c0       	rjmp	.+348    	; 0xc4a <__divsf3>
 aee:	a2 ce       	rjmp	.-700    	; 0x834 <__fp_inf>
 af0:	14 c1       	rjmp	.+552    	; 0xd1a <__fp_mpack>

00000af2 <ldexp>:
 af2:	d0 de       	rcall	.-608    	; 0x894 <__fp_splitA>
 af4:	e8 f3       	brcs	.-6      	; 0xaf0 <inverse+0x10>
 af6:	99 23       	and	r25, r25
 af8:	d9 f3       	breq	.-10     	; 0xaf0 <inverse+0x10>
 afa:	94 0f       	add	r25, r20
 afc:	51 1d       	adc	r21, r1
 afe:	bb f3       	brvs	.-18     	; 0xaee <inverse+0xe>
 b00:	91 50       	subi	r25, 0x01	; 1
 b02:	50 40       	sbci	r21, 0x00	; 0
 b04:	94 f0       	brlt	.+36     	; 0xb2a <ldexp+0x38>
 b06:	59 f0       	breq	.+22     	; 0xb1e <ldexp+0x2c>
 b08:	88 23       	and	r24, r24
 b0a:	32 f0       	brmi	.+12     	; 0xb18 <ldexp+0x26>
 b0c:	66 0f       	add	r22, r22
 b0e:	77 1f       	adc	r23, r23
 b10:	88 1f       	adc	r24, r24
 b12:	91 50       	subi	r25, 0x01	; 1
 b14:	50 40       	sbci	r21, 0x00	; 0
 b16:	c1 f7       	brne	.-16     	; 0xb08 <ldexp+0x16>
 b18:	9e 3f       	cpi	r25, 0xFE	; 254
 b1a:	51 05       	cpc	r21, r1
 b1c:	44 f7       	brge	.-48     	; 0xaee <inverse+0xe>
 b1e:	88 0f       	add	r24, r24
 b20:	91 1d       	adc	r25, r1
 b22:	96 95       	lsr	r25
 b24:	87 95       	ror	r24
 b26:	97 f9       	bld	r25, 7
 b28:	08 95       	ret
 b2a:	5f 3f       	cpi	r21, 0xFF	; 255
 b2c:	ac f0       	brlt	.+42     	; 0xb58 <ldexp+0x66>
 b2e:	98 3e       	cpi	r25, 0xE8	; 232
 b30:	9c f0       	brlt	.+38     	; 0xb58 <ldexp+0x66>
 b32:	bb 27       	eor	r27, r27
 b34:	86 95       	lsr	r24
 b36:	77 95       	ror	r23
 b38:	67 95       	ror	r22
 b3a:	b7 95       	ror	r27
 b3c:	08 f4       	brcc	.+2      	; 0xb40 <ldexp+0x4e>
 b3e:	b1 60       	ori	r27, 0x01	; 1
 b40:	93 95       	inc	r25
 b42:	c1 f7       	brne	.-16     	; 0xb34 <ldexp+0x42>
 b44:	bb 0f       	add	r27, r27
 b46:	58 f7       	brcc	.-42     	; 0xb1e <ldexp+0x2c>
 b48:	11 f4       	brne	.+4      	; 0xb4e <ldexp+0x5c>
 b4a:	60 ff       	sbrs	r22, 0
 b4c:	e8 cf       	rjmp	.-48     	; 0xb1e <ldexp+0x2c>
 b4e:	6f 5f       	subi	r22, 0xFF	; 255
 b50:	7f 4f       	sbci	r23, 0xFF	; 255
 b52:	8f 4f       	sbci	r24, 0xFF	; 255
 b54:	9f 4f       	sbci	r25, 0xFF	; 255
 b56:	e3 cf       	rjmp	.-58     	; 0xb1e <ldexp+0x2c>
 b58:	b8 ce       	rjmp	.-656    	; 0x8ca <__fp_szero>
 b5a:	0e f0       	brts	.+2      	; 0xb5e <ldexp+0x6c>
 b5c:	de c0       	rjmp	.+444    	; 0xd1a <__fp_mpack>
 b5e:	70 ce       	rjmp	.-800    	; 0x840 <__fp_nan>
 b60:	68 94       	set
 b62:	68 ce       	rjmp	.-816    	; 0x834 <__fp_inf>

00000b64 <log>:
 b64:	97 de       	rcall	.-722    	; 0x894 <__fp_splitA>
 b66:	c8 f3       	brcs	.-14     	; 0xb5a <ldexp+0x68>
 b68:	99 23       	and	r25, r25
 b6a:	d1 f3       	breq	.-12     	; 0xb60 <ldexp+0x6e>
 b6c:	c6 f3       	brts	.-16     	; 0xb5e <ldexp+0x6c>
 b6e:	df 93       	push	r29
 b70:	cf 93       	push	r28
 b72:	1f 93       	push	r17
 b74:	0f 93       	push	r16
 b76:	ff 92       	push	r15
 b78:	c9 2f       	mov	r28, r25
 b7a:	dd 27       	eor	r29, r29
 b7c:	88 23       	and	r24, r24
 b7e:	2a f0       	brmi	.+10     	; 0xb8a <log+0x26>
 b80:	21 97       	sbiw	r28, 0x01	; 1
 b82:	66 0f       	add	r22, r22
 b84:	77 1f       	adc	r23, r23
 b86:	88 1f       	adc	r24, r24
 b88:	da f7       	brpl	.-10     	; 0xb80 <log+0x1c>
 b8a:	20 e0       	ldi	r18, 0x00	; 0
 b8c:	30 e0       	ldi	r19, 0x00	; 0
 b8e:	40 e8       	ldi	r20, 0x80	; 128
 b90:	5f eb       	ldi	r21, 0xBF	; 191
 b92:	9f e3       	ldi	r25, 0x3F	; 63
 b94:	88 39       	cpi	r24, 0x98	; 152
 b96:	20 f0       	brcs	.+8      	; 0xba0 <log+0x3c>
 b98:	80 3e       	cpi	r24, 0xE0	; 224
 b9a:	30 f0       	brcs	.+12     	; 0xba8 <log+0x44>
 b9c:	21 96       	adiw	r28, 0x01	; 1
 b9e:	8f 77       	andi	r24, 0x7F	; 127
 ba0:	77 dd       	rcall	.-1298   	; 0x690 <__addsf3>
 ba2:	ec e7       	ldi	r30, 0x7C	; 124
 ba4:	f0 e0       	ldi	r31, 0x00	; 0
 ba6:	03 c0       	rjmp	.+6      	; 0xbae <log+0x4a>
 ba8:	73 dd       	rcall	.-1306   	; 0x690 <__addsf3>
 baa:	e9 ea       	ldi	r30, 0xA9	; 169
 bac:	f0 e0       	ldi	r31, 0x00	; 0
 bae:	73 df       	rcall	.-282    	; 0xa96 <__fp_powser>
 bb0:	8b 01       	movw	r16, r22
 bb2:	be 01       	movw	r22, r28
 bb4:	ec 01       	movw	r28, r24
 bb6:	fb 2e       	mov	r15, r27
 bb8:	6f 57       	subi	r22, 0x7F	; 127
 bba:	71 09       	sbc	r23, r1
 bbc:	75 95       	asr	r23
 bbe:	77 1f       	adc	r23, r23
 bc0:	88 0b       	sbc	r24, r24
 bc2:	99 0b       	sbc	r25, r25
 bc4:	fc dd       	rcall	.-1032   	; 0x7be <__floatsisf>
 bc6:	28 e1       	ldi	r18, 0x18	; 24
 bc8:	32 e7       	ldi	r19, 0x72	; 114
 bca:	41 e3       	ldi	r20, 0x31	; 49
 bcc:	5f e3       	ldi	r21, 0x3F	; 63
 bce:	8f de       	rcall	.-738    	; 0x8ee <__mulsf3x>
 bd0:	af 2d       	mov	r26, r15
 bd2:	98 01       	movw	r18, r16
 bd4:	ae 01       	movw	r20, r28
 bd6:	ff 90       	pop	r15
 bd8:	0f 91       	pop	r16
 bda:	1f 91       	pop	r17
 bdc:	cf 91       	pop	r28
 bde:	df 91       	pop	r29
 be0:	68 dd       	rcall	.-1328   	; 0x6b2 <__addsf3x>
 be2:	3f ce       	rjmp	.-898    	; 0x862 <__fp_round>

00000be4 <modf>:
 be4:	fa 01       	movw	r30, r20
 be6:	dc 01       	movw	r26, r24
 be8:	aa 0f       	add	r26, r26
 bea:	bb 1f       	adc	r27, r27
 bec:	9b 01       	movw	r18, r22
 bee:	ac 01       	movw	r20, r24
 bf0:	bf 57       	subi	r27, 0x7F	; 127
 bf2:	28 f4       	brcc	.+10     	; 0xbfe <modf+0x1a>
 bf4:	22 27       	eor	r18, r18
 bf6:	33 27       	eor	r19, r19
 bf8:	44 27       	eor	r20, r20
 bfa:	50 78       	andi	r21, 0x80	; 128
 bfc:	1f c0       	rjmp	.+62     	; 0xc3c <modf+0x58>
 bfe:	b7 51       	subi	r27, 0x17	; 23
 c00:	88 f4       	brcc	.+34     	; 0xc24 <modf+0x40>
 c02:	ab 2f       	mov	r26, r27
 c04:	00 24       	eor	r0, r0
 c06:	46 95       	lsr	r20
 c08:	37 95       	ror	r19
 c0a:	27 95       	ror	r18
 c0c:	01 1c       	adc	r0, r1
 c0e:	a3 95       	inc	r26
 c10:	d2 f3       	brmi	.-12     	; 0xc06 <modf+0x22>
 c12:	00 20       	and	r0, r0
 c14:	69 f0       	breq	.+26     	; 0xc30 <modf+0x4c>
 c16:	22 0f       	add	r18, r18
 c18:	33 1f       	adc	r19, r19
 c1a:	44 1f       	adc	r20, r20
 c1c:	b3 95       	inc	r27
 c1e:	da f3       	brmi	.-10     	; 0xc16 <modf+0x32>
 c20:	0d d0       	rcall	.+26     	; 0xc3c <modf+0x58>
 c22:	35 cd       	rjmp	.-1430   	; 0x68e <__subsf3>
 c24:	61 30       	cpi	r22, 0x01	; 1
 c26:	71 05       	cpc	r23, r1
 c28:	a0 e8       	ldi	r26, 0x80	; 128
 c2a:	8a 07       	cpc	r24, r26
 c2c:	b9 46       	sbci	r27, 0x69	; 105
 c2e:	30 f4       	brcc	.+12     	; 0xc3c <modf+0x58>
 c30:	9b 01       	movw	r18, r22
 c32:	ac 01       	movw	r20, r24
 c34:	66 27       	eor	r22, r22
 c36:	77 27       	eor	r23, r23
 c38:	88 27       	eor	r24, r24
 c3a:	90 78       	andi	r25, 0x80	; 128
 c3c:	30 96       	adiw	r30, 0x00	; 0
 c3e:	21 f0       	breq	.+8      	; 0xc48 <modf+0x64>
 c40:	20 83       	st	Z, r18
 c42:	31 83       	std	Z+1, r19	; 0x01
 c44:	42 83       	std	Z+2, r20	; 0x02
 c46:	53 83       	std	Z+3, r21	; 0x03
 c48:	08 95       	ret

00000c4a <__divsf3>:
 c4a:	0c d0       	rcall	.+24     	; 0xc64 <__divsf3x>
 c4c:	0a ce       	rjmp	.-1004   	; 0x862 <__fp_round>
 c4e:	02 de       	rcall	.-1020   	; 0x854 <__fp_pscB>
 c50:	40 f0       	brcs	.+16     	; 0xc62 <__divsf3+0x18>
 c52:	f9 dd       	rcall	.-1038   	; 0x846 <__fp_pscA>
 c54:	30 f0       	brcs	.+12     	; 0xc62 <__divsf3+0x18>
 c56:	21 f4       	brne	.+8      	; 0xc60 <__divsf3+0x16>
 c58:	5f 3f       	cpi	r21, 0xFF	; 255
 c5a:	19 f0       	breq	.+6      	; 0xc62 <__divsf3+0x18>
 c5c:	eb cd       	rjmp	.-1066   	; 0x834 <__fp_inf>
 c5e:	51 11       	cpse	r21, r1
 c60:	34 ce       	rjmp	.-920    	; 0x8ca <__fp_szero>
 c62:	ee cd       	rjmp	.-1060   	; 0x840 <__fp_nan>

00000c64 <__divsf3x>:
 c64:	0f de       	rcall	.-994    	; 0x884 <__fp_split3>
 c66:	98 f3       	brcs	.-26     	; 0xc4e <__divsf3+0x4>

00000c68 <__divsf3_pse>:
 c68:	99 23       	and	r25, r25
 c6a:	c9 f3       	breq	.-14     	; 0xc5e <__divsf3+0x14>
 c6c:	55 23       	and	r21, r21
 c6e:	b1 f3       	breq	.-20     	; 0xc5c <__divsf3+0x12>
 c70:	95 1b       	sub	r25, r21
 c72:	55 0b       	sbc	r21, r21
 c74:	bb 27       	eor	r27, r27
 c76:	aa 27       	eor	r26, r26
 c78:	62 17       	cp	r22, r18
 c7a:	73 07       	cpc	r23, r19
 c7c:	84 07       	cpc	r24, r20
 c7e:	38 f0       	brcs	.+14     	; 0xc8e <__divsf3_pse+0x26>
 c80:	9f 5f       	subi	r25, 0xFF	; 255
 c82:	5f 4f       	sbci	r21, 0xFF	; 255
 c84:	22 0f       	add	r18, r18
 c86:	33 1f       	adc	r19, r19
 c88:	44 1f       	adc	r20, r20
 c8a:	aa 1f       	adc	r26, r26
 c8c:	a9 f3       	breq	.-22     	; 0xc78 <__divsf3_pse+0x10>
 c8e:	33 d0       	rcall	.+102    	; 0xcf6 <__divsf3_pse+0x8e>
 c90:	0e 2e       	mov	r0, r30
 c92:	3a f0       	brmi	.+14     	; 0xca2 <__divsf3_pse+0x3a>
 c94:	e0 e8       	ldi	r30, 0x80	; 128
 c96:	30 d0       	rcall	.+96     	; 0xcf8 <__divsf3_pse+0x90>
 c98:	91 50       	subi	r25, 0x01	; 1
 c9a:	50 40       	sbci	r21, 0x00	; 0
 c9c:	e6 95       	lsr	r30
 c9e:	00 1c       	adc	r0, r0
 ca0:	ca f7       	brpl	.-14     	; 0xc94 <__divsf3_pse+0x2c>
 ca2:	29 d0       	rcall	.+82     	; 0xcf6 <__divsf3_pse+0x8e>
 ca4:	fe 2f       	mov	r31, r30
 ca6:	27 d0       	rcall	.+78     	; 0xcf6 <__divsf3_pse+0x8e>
 ca8:	66 0f       	add	r22, r22
 caa:	77 1f       	adc	r23, r23
 cac:	88 1f       	adc	r24, r24
 cae:	bb 1f       	adc	r27, r27
 cb0:	26 17       	cp	r18, r22
 cb2:	37 07       	cpc	r19, r23
 cb4:	48 07       	cpc	r20, r24
 cb6:	ab 07       	cpc	r26, r27
 cb8:	b0 e8       	ldi	r27, 0x80	; 128
 cba:	09 f0       	breq	.+2      	; 0xcbe <__divsf3_pse+0x56>
 cbc:	bb 0b       	sbc	r27, r27
 cbe:	80 2d       	mov	r24, r0
 cc0:	bf 01       	movw	r22, r30
 cc2:	ff 27       	eor	r31, r31
 cc4:	93 58       	subi	r25, 0x83	; 131
 cc6:	5f 4f       	sbci	r21, 0xFF	; 255
 cc8:	2a f0       	brmi	.+10     	; 0xcd4 <__divsf3_pse+0x6c>
 cca:	9e 3f       	cpi	r25, 0xFE	; 254
 ccc:	51 05       	cpc	r21, r1
 cce:	68 f0       	brcs	.+26     	; 0xcea <__divsf3_pse+0x82>
 cd0:	b1 cd       	rjmp	.-1182   	; 0x834 <__fp_inf>
 cd2:	fb cd       	rjmp	.-1034   	; 0x8ca <__fp_szero>
 cd4:	5f 3f       	cpi	r21, 0xFF	; 255
 cd6:	ec f3       	brlt	.-6      	; 0xcd2 <__divsf3_pse+0x6a>
 cd8:	98 3e       	cpi	r25, 0xE8	; 232
 cda:	dc f3       	brlt	.-10     	; 0xcd2 <__divsf3_pse+0x6a>
 cdc:	86 95       	lsr	r24
 cde:	77 95       	ror	r23
 ce0:	67 95       	ror	r22
 ce2:	b7 95       	ror	r27
 ce4:	f7 95       	ror	r31
 ce6:	9f 5f       	subi	r25, 0xFF	; 255
 ce8:	c9 f7       	brne	.-14     	; 0xcdc <__divsf3_pse+0x74>
 cea:	88 0f       	add	r24, r24
 cec:	91 1d       	adc	r25, r1
 cee:	96 95       	lsr	r25
 cf0:	87 95       	ror	r24
 cf2:	97 f9       	bld	r25, 7
 cf4:	08 95       	ret
 cf6:	e1 e0       	ldi	r30, 0x01	; 1
 cf8:	66 0f       	add	r22, r22
 cfa:	77 1f       	adc	r23, r23
 cfc:	88 1f       	adc	r24, r24
 cfe:	bb 1f       	adc	r27, r27
 d00:	62 17       	cp	r22, r18
 d02:	73 07       	cpc	r23, r19
 d04:	84 07       	cpc	r24, r20
 d06:	ba 07       	cpc	r27, r26
 d08:	20 f0       	brcs	.+8      	; 0xd12 <__divsf3_pse+0xaa>
 d0a:	62 1b       	sub	r22, r18
 d0c:	73 0b       	sbc	r23, r19
 d0e:	84 0b       	sbc	r24, r20
 d10:	ba 0b       	sbc	r27, r26
 d12:	ee 1f       	adc	r30, r30
 d14:	88 f7       	brcc	.-30     	; 0xcf8 <__divsf3_pse+0x90>
 d16:	e0 95       	com	r30
 d18:	08 95       	ret

00000d1a <__fp_mpack>:
 d1a:	9f 3f       	cpi	r25, 0xFF	; 255
 d1c:	31 f0       	breq	.+12     	; 0xd2a <__fp_mpack_finite+0xc>

00000d1e <__fp_mpack_finite>:
 d1e:	91 50       	subi	r25, 0x01	; 1
 d20:	20 f4       	brcc	.+8      	; 0xd2a <__fp_mpack_finite+0xc>
 d22:	87 95       	ror	r24
 d24:	77 95       	ror	r23
 d26:	67 95       	ror	r22
 d28:	b7 95       	ror	r27
 d2a:	88 0f       	add	r24, r24
 d2c:	91 1d       	adc	r25, r1
 d2e:	96 95       	lsr	r25
 d30:	87 95       	ror	r24
 d32:	97 f9       	bld	r25, 7
 d34:	08 95       	ret

00000d36 <_exit>:
 d36:	f8 94       	cli

00000d38 <__stop_program>:
 d38:	ff cf       	rjmp	.-2      	; 0xd38 <__stop_program>
