
LED_GRAPH.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000152  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  000001a6  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000020  00000000  00000000  000001d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000002d0  00000000  00000000  000001f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000ca  00000000  00000000  000004c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000194  00000000  00000000  00000590  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000024  00000000  00000000  00000724  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000196  00000000  00000000  00000748  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000288  00000000  00000000  000008de  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000010  00000000  00000000  00000b66  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 a7 00 	jmp	0x14e	; 0x14e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

#include "main.h"

int main(void)
{
	DDRA = 0x0f;
  6c:	8f e0       	ldi	r24, 0x0F	; 15
  6e:	8a bb       	out	0x1a, r24	; 26
	PORTA = 0xf0;
  70:	80 ef       	ldi	r24, 0xF0	; 240
  72:	8b bb       	out	0x1b, r24	; 27
    while(1)
    {
		if( GET_BIT(PINA,7) == 0)
  74:	cf 99       	sbic	0x19, 7	; 25
  76:	67 c0       	rjmp	.+206    	; 0x146 <main+0xda>
		{
			SET_BIT(PORTA,0);
  78:	d8 9a       	sbi	0x1b, 0	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  7a:	2f e9       	ldi	r18, 0x9F	; 159
  7c:	86 e8       	ldi	r24, 0x86	; 134
  7e:	91 e0       	ldi	r25, 0x01	; 1
  80:	21 50       	subi	r18, 0x01	; 1
  82:	80 40       	sbci	r24, 0x00	; 0
  84:	90 40       	sbci	r25, 0x00	; 0
  86:	e1 f7       	brne	.-8      	; 0x80 <main+0x14>
  88:	00 c0       	rjmp	.+0      	; 0x8a <main+0x1e>
  8a:	00 00       	nop
			_delay_ms(500);
			SET_BIT(PORTA,1);
  8c:	d9 9a       	sbi	0x1b, 1	; 27
  8e:	2f e9       	ldi	r18, 0x9F	; 159
  90:	86 e8       	ldi	r24, 0x86	; 134
  92:	91 e0       	ldi	r25, 0x01	; 1
  94:	21 50       	subi	r18, 0x01	; 1
  96:	80 40       	sbci	r24, 0x00	; 0
  98:	90 40       	sbci	r25, 0x00	; 0
  9a:	e1 f7       	brne	.-8      	; 0x94 <main+0x28>
  9c:	00 c0       	rjmp	.+0      	; 0x9e <main+0x32>
  9e:	00 00       	nop
			_delay_ms(500);
			SET_BIT(PORTA,2);
  a0:	da 9a       	sbi	0x1b, 2	; 27
  a2:	2f e9       	ldi	r18, 0x9F	; 159
  a4:	86 e8       	ldi	r24, 0x86	; 134
  a6:	91 e0       	ldi	r25, 0x01	; 1
  a8:	21 50       	subi	r18, 0x01	; 1
  aa:	80 40       	sbci	r24, 0x00	; 0
  ac:	90 40       	sbci	r25, 0x00	; 0
  ae:	e1 f7       	brne	.-8      	; 0xa8 <main+0x3c>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <main+0x46>
  b2:	00 00       	nop
			_delay_ms(500);
			SET_BIT(PORTA,3);
  b4:	db 9a       	sbi	0x1b, 3	; 27
  b6:	2f e9       	ldi	r18, 0x9F	; 159
  b8:	86 e8       	ldi	r24, 0x86	; 134
  ba:	91 e0       	ldi	r25, 0x01	; 1
  bc:	21 50       	subi	r18, 0x01	; 1
  be:	80 40       	sbci	r24, 0x00	; 0
  c0:	90 40       	sbci	r25, 0x00	; 0
  c2:	e1 f7       	brne	.-8      	; 0xbc <main+0x50>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <main+0x5a>
  c6:	00 00       	nop
			_delay_ms(500);
			CLR_LOWER_NIBBLE(PORTA);
  c8:	8b b3       	in	r24, 0x1b	; 27
  ca:	80 7f       	andi	r24, 0xF0	; 240
  cc:	8b bb       	out	0x1b, r24	; 27
			SET_BIT(PORTA,0);
  ce:	d8 9a       	sbi	0x1b, 0	; 27
			SET_BIT(PORTA,1);
  d0:	d9 9a       	sbi	0x1b, 1	; 27
  d2:	2f e9       	ldi	r18, 0x9F	; 159
  d4:	86 e8       	ldi	r24, 0x86	; 134
  d6:	91 e0       	ldi	r25, 0x01	; 1
  d8:	21 50       	subi	r18, 0x01	; 1
  da:	80 40       	sbci	r24, 0x00	; 0
  dc:	90 40       	sbci	r25, 0x00	; 0
  de:	e1 f7       	brne	.-8      	; 0xd8 <main+0x6c>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <main+0x76>
  e2:	00 00       	nop
			_delay_ms(500);
			SET_BIT(PORTA,2);
  e4:	da 9a       	sbi	0x1b, 2	; 27
  e6:	2f e9       	ldi	r18, 0x9F	; 159
  e8:	86 e8       	ldi	r24, 0x86	; 134
  ea:	91 e0       	ldi	r25, 0x01	; 1
  ec:	21 50       	subi	r18, 0x01	; 1
  ee:	80 40       	sbci	r24, 0x00	; 0
  f0:	90 40       	sbci	r25, 0x00	; 0
  f2:	e1 f7       	brne	.-8      	; 0xec <main+0x80>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <main+0x8a>
  f6:	00 00       	nop
			_delay_ms(500);
			SET_BIT(PORTA,3);
  f8:	db 9a       	sbi	0x1b, 3	; 27
  fa:	2f e9       	ldi	r18, 0x9F	; 159
  fc:	86 e8       	ldi	r24, 0x86	; 134
  fe:	91 e0       	ldi	r25, 0x01	; 1
 100:	21 50       	subi	r18, 0x01	; 1
 102:	80 40       	sbci	r24, 0x00	; 0
 104:	90 40       	sbci	r25, 0x00	; 0
 106:	e1 f7       	brne	.-8      	; 0x100 <main+0x94>
 108:	00 c0       	rjmp	.+0      	; 0x10a <main+0x9e>
 10a:	00 00       	nop
			_delay_ms(500);
			CLR_LOWER_NIBBLE(PORTA);
 10c:	8b b3       	in	r24, 0x1b	; 27
 10e:	80 7f       	andi	r24, 0xF0	; 240
 110:	8b bb       	out	0x1b, r24	; 27
			SET_BIT(PORTA,0);
 112:	d8 9a       	sbi	0x1b, 0	; 27
			SET_BIT(PORTA,1);
 114:	d9 9a       	sbi	0x1b, 1	; 27
			SET_BIT(PORTA,2);
 116:	da 9a       	sbi	0x1b, 2	; 27
 118:	2f e9       	ldi	r18, 0x9F	; 159
 11a:	86 e8       	ldi	r24, 0x86	; 134
 11c:	91 e0       	ldi	r25, 0x01	; 1
 11e:	21 50       	subi	r18, 0x01	; 1
 120:	80 40       	sbci	r24, 0x00	; 0
 122:	90 40       	sbci	r25, 0x00	; 0
 124:	e1 f7       	brne	.-8      	; 0x11e <main+0xb2>
 126:	00 c0       	rjmp	.+0      	; 0x128 <main+0xbc>
 128:	00 00       	nop
			_delay_ms(500);
			SET_BIT(PORTA,3);
 12a:	db 9a       	sbi	0x1b, 3	; 27
 12c:	2f e9       	ldi	r18, 0x9F	; 159
 12e:	86 e8       	ldi	r24, 0x86	; 134
 130:	91 e0       	ldi	r25, 0x01	; 1
 132:	21 50       	subi	r18, 0x01	; 1
 134:	80 40       	sbci	r24, 0x00	; 0
 136:	90 40       	sbci	r25, 0x00	; 0
 138:	e1 f7       	brne	.-8      	; 0x132 <main+0xc6>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <main+0xd0>
 13c:	00 00       	nop
			_delay_ms(500);
			CLR_LOWER_NIBBLE(PORTA);
 13e:	8b b3       	in	r24, 0x1b	; 27
 140:	80 7f       	andi	r24, 0xF0	; 240
 142:	8b bb       	out	0x1b, r24	; 27
 144:	97 cf       	rjmp	.-210    	; 0x74 <main+0x8>
		}else
		{
			CLR_LOWER_NIBBLE(PORTA);
 146:	8b b3       	in	r24, 0x1b	; 27
 148:	80 7f       	andi	r24, 0xF0	; 240
 14a:	8b bb       	out	0x1b, r24	; 27
 14c:	93 cf       	rjmp	.-218    	; 0x74 <main+0x8>

0000014e <_exit>:
 14e:	f8 94       	cli

00000150 <__stop_program>:
 150:	ff cf       	rjmp	.-2      	; 0x150 <__stop_program>
